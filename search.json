[{"title":"Mysql数据库","url":"http://example.com/2022/01/08/Mysql数据库/","content":"一：Mysql数据库详解1.登录命令使用-h参数时连接方式为:TCP/IP\n如果没有 -h 参数，默认会使用 UNIX socket 方式\nmysql-hhost_name-u user_name–ppassword\n\n2.Mysql程序常用命令show databases \t\t//显示所有数据库use dbname\t\t\t//选择默认的数据库show tables    \t\t//显示默认数据库中所有表\\c\t\t\t\t\t//放弃正在输入的命令\\h\t\t\t\t\t//显示命令清单\\q\t\t\t\t\t//退出mysql程序\\s\t\t\t\t\t//查看mysql服务器的状态    \n\n3.数据类型种类\n\n\n\n\n4.常用sql语句1.创建数据库/删除数据库create database name   \t\t\t//创建数据库drop database name \t\t\t\t//删除数据库    \n\n2.建立/删除/查看表操作create table liuyan(id int auto_increment primary key,title varchar(255),content text)//创建数据表并指定字段auto_increment             //自增primary key  \t\t\t\t//主键 默认不能为空drop table name\t\t\t\t//删除表\n\n3.更改表结构的操作alter table name rename as name\t\t\t\t//修改liuyan为liuyanbanalter table name add time time\t\t\t\t//(first/after 字段名)默认最后alter table name add primary key (time)\t\t//定义字段为主键alter table name modify time text\t\t\t\t//修改数据类型alter table name change time user varchar(255)\t\t//修改字段名及数据类型alter table name drop time\t\t\t\t\t\t\t//删除字段\n\n\n\n4.插入数据操作insert into 表名(colname1,colname2) values(&#x27;value1&#x27;,&#x27;value2&#x27;) //插入单行数据insert into 表名(title,content) values(&#x27;title test1&#x27;,&#x27;content test1&#x27;),(&#x27;title test1&#x27;,&#x27;content test1&#x27;)\t\t\t\t//插入多行数据\n\n\n\n5.更新数据update tbname set cloname=&#x27;value&#x27; where id=1;\n\n\n6.删除数据delete from liuyan where id =1;\n\n\n二：PHP操作Mysql1.PHP访问MySQL数据库的流程\n\n\n2.数据库相关函数介绍\n\n\n\n\n三：PHP文件包含1.概念\n2.相关函数\n\n\n\n\n","categories":["Mysql数据库"],"tags":["Mysql数据库"]},{"title":"php基础（三）","url":"http://example.com/2022/01/06/php基础（三）/","content":"一：表单处理1.表单的概述\n2.表单属性\n3.实例前端html代码&lt;html&gt;&lt;body&gt;&lt;form action=&quot;action.php&quot; method=&quot;post&quot;&gt;username:&lt;input type=&quot;text&quot; name=&quot;user&quot;&gt;&lt;br&gt;password:&lt;input type=&quot;password&quot; name=&quot;pass&quot;&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;\n\n后端php代码&lt;?php$username = $_POST[&#x27;username&#x27;];$pass = $_POST[&#x27;password&#x27;];echo &quot;username is &quot;.$username;echo &quot;&lt;/br&gt;&quot;;echo &quot;password is &quot;.$pass;?&gt;\n\n4.表单的属性\n5.服务器端接收数据\n\n二：PHP文件处理1.表单处理过程通过句柄来确定从哪里开始读取文件\n&lt;?php$name = &quot;1.txt&quot;;\t\t\t\t\t//定义文件名字$file = fopen($name,&#x27;r&#x27;)\t\t\t//用读的权限打开文件，并获取句柄echo fread($file,filesize($name));\t\t//读取整个文件fclose($file);\t\t\t\t\t\t//关闭文件?&gt;\n\n2..fopen()函数$file = fopen($name,&#x27;r&#x27;)\t\t\t//用读的权限打开文件，并获取句柄\n\n\n3.fread()函数\nfread($file,filesize($name));\t\t//读取整个文件\n\n4.fgets()函数读取文本文件中的一行\n&lt;?php$file = fopen(&#x27;1.txt&#x27;,&#x27;r&#x27;);while(!feof($file))&#123;\t\t\t\t//判断指针是否已经到达文件末尾，没有到文件末尾就循环读取文件echo fgets($file).&quot;&lt;hr&gt;&quot;;\t\t\t//读取一行文本&#125;fclose($file);?&gt;\n\n5.fgetss() 函数读取文件中的一行字符，并去掉所有HTML和PHP标记\n&lt;?php$file = fopen(&#x27;1.txt&#x27;,&#x27;r&#x27;);while(!feof($file))&#123;\t\t\t\t//判断指针是否已经到达文件末尾，没有到文件末尾就循环读取文件echo fgetss($file).&quot;&lt;hr&gt;&quot;;\t\t\t//读取一行文本,并去掉所有HTML和PHP标记&#125;fclose($file);?&gt;\n\n6.fgetc() 函数读取文件中的一个字符\n&lt;?php$file = fopen(&#x27;1.txt&#x27;,&#x27;r&#x27;);while(!feof($file))&#123;\t\t\t\t//判断指针是否已经到达文件末尾，没有到文件末尾就循环读取文件echo fgetc($file).&quot;&lt;hr&gt;&quot;;\t\t\t//读取文件中的一个字符&#125;fclose($file);?&gt;\n\n7.file_get_contents() 函数无须经过打开文件及关闭文件操作就可读取文件中的全部内容 ，\n&lt;?phpecho file_get_contents(1.txt);\t\t\t//读取文件的全部内容?&gt;\n\n\n8.file_put_contents()函数以追加的方式将内容写进文件中\n&lt;?php$file = &#x27;log.txt&#x27;;\t\t\t //要写入文件的文件名，如果文件不存在，将会创建一个log.txt$content = &quot;helleworld&quot;;if(file_put_contents($file, $content,FILE_APPEND))&#123;echo &quot;success&lt;br /&gt;&quot;;&#125;echo file_get_contents($file);?&gt;\n\n9.fwrite() 函数以将一个字符串写入到文本文件中\n&lt;?php$file = &#x27;log.txt’;$handle = fopen($file, &#x27;w&#x27;) $data = &#x27;This is the data&#x27;;fwrite($handle, $data);fclose($handle);?&gt;\n\n\n10.file()函数把文件读入到一个数组中\n&lt;?phpprint_r(file(&quot;test.txt&quot;));?&gt; \n\n输出\nArray([0] =&gt; Hello World. Testing testing![1] =&gt; Another day, another line.[2] =&gt; If the array picks up this line,[3] =&gt; then is it a pickup line?)\n\n11.复制、移动和删除文件&lt;?phpif(copy(&#x27;test.txt&#x27;,&#x27;./data/bak.txt&#x27;)) //复制文件echo &#x27;文件复制成功&#x27;;else echo &#x27;文件复制失败&#x27;;unlink(&#x27;./test.txt&#x27;); //删除文件?&gt;\n\n\n12.获取文件属性\n\n13.目录的基本操作\n","categories":["php代码基础"],"tags":["php代码基础"]},{"title":"php基础（二）","url":"http://example.com/2022/01/05/php基础（二）/","content":"一：String 函数1.addcslashes() 函数addslashes() 函数返回在预定义的字符前添加反斜杠的字符串。\n预定义字符是：\n\n单引号（’）\n双引号（”）\n反斜杠（\\）\nNULL\n\n提示：该函数可用于为存储在数据库中的字符串以及数据库查询语句准备合适的字符串。\n注释：默认情况下，PHP 指令 magic_quotes_gpc 为 on，对所有的 GET、POST 和 COOKIE 数据自动运行 addslashes()。不要对已经被 magic_quotes_gpc 转义过的字符串使用 addslashes()，因为这样会导致双层转义。遇到这种情况时可以使用函数 get_magic_quotes_gpc() 进行检测。\n语法addcslashes(string); \t\t\t// string规定要转义的字符串    \n\n实例1定义转义的字符&lt;?php$sum = &quot;Hell&#x27;o World&quot;;echo addcslashes($sum)?&gt;    \n\n2.bin2hex() 函数bin2hex() 函数把 ASCII 字符的字符串转换为十六进制值。字符串可通过使用 pack() 函数再转换回去\n语法bin2hex(string)\t\t\t\t//  string规定要转换的字符串\n\n实例&lt;?php$str = bin2hex(&quot;Hello World!&quot;);echo($str);?&gt;\n\n3.hex2bin()函数hex2bin() 函数把十六进制值的字符串转换为 ASCII 字符。\n实例&lt;?phpecho hex2bin(&quot;48656c6c6f20576f726c6421&quot;);?&gt;\n\n输出Hello World!\n\n4.chr() 函数chr() 函数从指定 ASCII 值返回字符。\nASCII 值可被指定为十进制值、八进制值或十六进制值。八进制值被定义为带前置 0，十六进制值被定义为带前置 0x。\n语法chr(ascii)\t\t\t\t\t//ascii ASCII值\n\n实例使用八进制值 046 来添加 ASCII 字符：&amp;。\n&lt;?php$str = chr(046);           \t\t\t//&#x27;0&#x27;指定为8进制 46 = &amp;echo(&quot;You $str me forever!&quot;);?&gt;\n\n5.explode() 函数explode() 函数使用一个字符串分割另一个字符串，并返回由字符串组成的数组。\n注释：“separator” 参数不能是一个空字符串。\n注释：该函数是二进制安全的。\n语法explode(separator,string,limit)\t\t\t//separator 规定在哪里分割字符串  string 要分割的字符串     //limit规定所返回的数组元素的数目\n\n实例&lt;?php$str = &#x27;one,two,three,four&#x27;; //  返回包含一个元素的数组print_r(explode(&#x27;,&#x27;,$str,0));print &quot;&lt;br&gt;&quot;; // 数组元素为 2print_r(explode(&#x27;,&#x27;,$str,2));print &quot;&lt;br&gt;&quot;; // 删除最后一个数组元素print_r(explode(&#x27;,&#x27;,$str,-1));?&gt;\n\n6.md5() 函数md5() 函数计算字符串的 MD5 散列。\nmd5() 函数不能处理数组，数组都返回 null，md5(a[]) 结果为 null。\n实例&lt;?php$str = &quot;Hello&quot;;echo md5($str);\t\t\t//将字符串加密?&gt;\n\n7.md5_file() 函数md5_file() 函数计算文件的 MD5 散列。。\n实例&lt;?php$filename = &quot;test.txt&quot;;$md5file = md5_file($filename);echo $md5file;\t\t\t//将文件加密?&gt;&lt;?php$md5file = md5_file(&quot;test.txt&quot;);\t\t//在文件中存储 &quot;test.txt&quot; 的 MD5 散列file_put_contents(&quot;md5file.txt&quot;,$md5file);?&gt; &lt;?php$md5file = file_get_contents(&quot;md5file.txt&quot;);\t//检测 &quot;test.txt&quot; 是否已被更改（即 MD5 散列是否已被更改）if (md5_file(&quot;test.txt&quot;) == $md5file)&#123;echo &quot;The file is ok.&quot;;&#125;else&#123;echo &quot;The file has been changed.&quot;;&#125;?&gt;    \n\n8.str_split() 函数str_split() 函数把字符串分割到数组中。\n&lt;?phpprint_r(str_split(&quot;Hello&quot;,3));//从第三位之后将字符串分割到数组中?&gt;\n\n输出Array ( [0] =&gt; Hel [1] =&gt; lo )\n\n9.str_replace() 函数str_replace() 函数替换字符串中的一些字符（区分大小写）。\n实例&lt;?phpecho str_replace(&quot;World&quot;,&quot;pata&quot;,&quot;Hello World&quot;);?&gt;\n\n输出Hello pata\n\n10.str_ireplace()函数str_ireplace() 函数替换字符串中的一些字符（不区分大小写）\n实例&lt;?phpecho str_ireplace(&quot;WORLD&quot;,&quot;Peter&quot;,&quot;Hello world!&quot;);?&gt;\n\n输出Hello Pata\n\n11.strcmp()函数strcmp() 函数比较两个字符串。\n注释：strcmp() 函数是二进制安全的，且区分大小写。\n提示：该函数与 strncmp() 函数类似，不同的是，通过 strncmp() 您可以指定每个字符串用于比较的字符数。\n实例&lt;?phpecho strcmp(&quot;Hello world!&quot;,&quot;Hello world!&quot;); // the two strings are equalecho strcmp(&quot;Hello world!&quot;,&quot;Hello&quot;); // string1 is greater than string2echo strcmp(&quot;Hello world!&quot;,&quot;Hello world! Hello!&quot;); // string1 is less than string2?&gt;\n\n输出0\t\t\t\t//值为0则两个字符串相等7\t\t\t\t// &gt;0则string1 大于 string2-7\t\t\t\t// &lt;00则string1 小于 string2\n\n12.srlen()函数strlen() 函数返回字符串的长度，中文字符串的处理使用 mb_strlen() 函数\n实例&lt;?phpecho strlen(&quot;Hello&quot;);\t\t\t//返回字符串的长度?&gt;\n\n13.substr()函数substr() 函数返回字符串的一部分。\n注释：如果 start 参数是负数且 length 小于或等于 start，则 length 为 0。\n实例&lt;?phpecho substr(&quot;Hello world&quot;,10).&quot;&lt;br&gt;&quot;;\t\t//输出 decho substr(&quot;Hello world&quot;,1).&quot;&lt;br&gt;&quot;;\t\t// ello worldecho substr(&quot;Hello world&quot;,3).&quot;&lt;br&gt;&quot;;\t\t// lo worldecho substr(&quot;Hello world&quot;,7).&quot;&lt;br&gt;&quot;;\t\t//orld \t\t\t\t\t\t\t\t\t\t\t//空格也算是字符串的一位echo substr(&quot;Hello world&quot;,-1).&quot;&lt;br&gt;&quot;;\t\t//decho substr(&quot;Hello world&quot;,-10).&quot;&lt;br&gt;&quot;;\t\t//ello worldecho substr(&quot;Hello world&quot;,-8).&quot;&lt;br&gt;&quot;;\t\t//lo worldecho substr(&quot;Hello world&quot;,-4).&quot;&lt;br&gt;&quot;;\t\t//orld?&gt;\n\n14.trim()函数trim() 函数移除字符串两侧的空白字符或其他预定义字符。\n相关函数：\n\nltrim() - 移除字符串左侧的空白字符或其他预定义字符。\nrtrim() - 移除字符串右侧的空白字符或其他预定义字符。\n\n实例1移除字符串两侧的字符&lt;?php$str = &quot;Hello World!&quot;;echo $str . PHP_EOL;echo trim($str,&quot;Hed!&quot;);\t\t//输出  llo Worl?&gt;\n\n实例2移除字符串两侧的空格&lt;?php$str = &quot; Hello World! &quot;;echo &quot;Without trim: &quot; . $str;echo &quot;&lt;br&gt;&quot;;echo &quot;With trim: &quot; . trim($str);?&gt;\n\n实例3移除字符串两侧的换行符&lt;?php$str = &quot;nnnHello World!nnn&quot;;echo &quot;Without trim: &quot; . $str;echo &quot;&lt;br&gt;&quot;;echo &quot;With trim: &quot; . trim($str);?&gt;\n\n15.htmlspecialchars()函数htmlspecialchars() 函数把一些预定义的字符转换为 HTML 实体。\n预定义的字符是：\n\n&amp; （和号）成为 &amp;\n“ （双引号）成为 &quot;\n‘ （单引号）成为 ‘\n&lt; （小于）成为 &lt;\n&gt; （大于）成为 &gt;\n\n实例把预定义的字符 “&lt;” （小于）和 “&gt;” （大于）转换为 HTML 实体\n&lt;?php$str = &quot;This is some &lt;b&gt;bold&lt;/b&gt; text.&quot;;\t\techo htmlspecialchars($str);\t\t\t\t//输出结果不变?&gt;\n\n转换后\n&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;body&gt;This is some &amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt; text.&lt;/body&gt;&lt;/html&gt;\n\n","categories":["php代码基础"],"tags":["php代码基础"]},{"title":"php基础（一）","url":"http://example.com/2022/01/04/php基础（一）/","content":"一：常见标记1.标准标记PHP 脚本以  结束：\n&lt;?php    echo &#x27;Hello World&#x27;;?&gt;     \t\t\t\t\t\t//标准的，所有的服务器都可用\n\n2.短标签类型&lt;?    echo &#x27;Hello World&#x27;;?&gt;    \t\t\t\t\t\t//短标签类型，需要配置php.ini配置文件\n\n3.短标签类型&lt;%    echo &#x27;Hello World&#x27;;%&gt;\t\t\t\t\t\t\t//短标签类型，需要配置php.ini配置文件，属于是asp的编写方式    \n\n4.特殊类的标记&lt;?= 123;  \techo &#x27;Hello World&#x27;;?&gt;        \t\t\t\t\t//特殊类的标签，大部分网站都可以，可以尝试用来绕waf\n\n5.特殊类标记&lt;script language=&quot;php&quot;&gt;    echo &#x27;Hello World&#x27;;&lt;/script&gt;\t\t\t\t//特殊类标签，类似于html标签，可用网站比较少    \n\n6.EOFPHP EOF(heredoc)是一种在命令行shell（如sh、csh、ksh、bash、PowerShell和zsh）和程序语言（像Perl、PHP、Python和Ruby）里定义一个字符串的方法。\n使用概述：\n\n\n必须后接分号，否则编译通不过。\n\n\n\nEOF 可以用任意其它字符代替，只需保证结束标识与开始标识一致。\n\n\n\n结束标识必须顶格独自占一行(即必须从行首开始，前后不能衔接任何空白和字符)。**\n\n\n\n开始标识可以不带引号或带单双引号，不带引号与带双引号效果一致，解释内嵌的变量和转义符号，带单引号则不解释内嵌的变量和转义符号。\n\n\n\n当内容需要内嵌引号（单引号或双引号）时，不需要加转义符，本身对单双引号转义，此处相当与q和qq的用法。\n\n\n\n&lt;?phpecho &lt;&lt;&lt;EOF        &lt;h1&gt;我的第一个标题&lt;/h1&gt;        &lt;p&gt;我的第一个段落。&lt;/p&gt;EOF;// 结束需要独立一行且前后不能空格?&gt;\n\n\n\n二.变量及变量的数据类型1.变量的概念变量可以是很短的名称（如 x 和 y）或者更具描述性的名称（如 age、carname、totalvolume）。\nPHP 变量规则：\n\n变量以 $ 符号开始，后面跟着变量的名称\n变量名必须以字母或者下划线字符开始\n变量名只能包含字母、数字以及下划线（A-z、0-9 和 _ ）\n变量名不能包含空格\n变量名是区分大小写的（$y 和 $Y 是两个不同的变量）\n\n2.变量分类&lt;?php$b = 1;\t\t\t\t\t\t\t//整型  是一个没有小数的数字$b = 2.2;\t\t\t\t\t\t//浮点型 浮点数是带小数部分的数字，或是指数形式$b = &#x27;Hello World&#x27;;\t\t\t\t//字符串  类似 &quot;Hello World&quot; 这样一条文本被称为字符串$b = true||false ;      \t\t//布尔型$b = crray(1,2,3,4,5);  \t\t//数值数组$b = array(&quot;Peter&quot;=&gt;&quot;35&quot;,&quot;Ben&quot;=&gt;&quot;37&quot;,&quot;Joe&quot;=&gt;&quot;43&quot;);\t\t//关联数组$b = null ; \t\t\t\t\t//空  表示没有值$b = new Object()\t\t\t\t//对象    \t\t\t\t\t\t\t//资源类型  网络连接 数据库连接 打开文件...?&gt;    \n\n三:常量1.常量概念常量是一个简单值的标识符。该值在脚本中不能改变。\n一个常量由英文字母、下划线、和数字组成,但数字不能作为首字母出现。 (常量名不需要加 $ 修饰符)。\n注意： 常量在整个脚本中都可以使用\n2.使用语法该函数有三个参数:\n\nname：必选参数，常量名称，即标志符。\nvalue：必选参数，常量的值。\ncase_insensitive ：可选参数，如果设置为 TRUE，该常量则大小写不敏感。默认是大小写敏感的\n\nbool define ( string $name , mixed $value [, bool $case_insensitive = false ] )\n\n区分大小写的常量\n&lt;?php// 区分大小写的常量名define(&quot;GREETING&quot;, &quot;欢迎访问 Runoob.com&quot;);echo GREETING;    // 输出 &quot;欢迎访问 Runoob.com&quot;echo &#x27;&lt;br&gt;&#x27;;echo greeting;   // 输出 &quot;greeting&quot;，但是有警告信息，表示该常量未定义?&gt;\n\n不区分大小写的常量\n&lt;?php// 不区分大小写的常量名define(&quot;GREETING&quot;, &quot;欢迎访问 Runoob.com&quot;, true);echo greeting;  // 输出 &quot;欢迎访问 Runoob.com&quot;?&gt;\n\n四：输出函数1.常见的输出函数语句echo \t\t\t//输出print\t\t\t//输出var_dump\t\t//输出die\t\t\t\t//结束语句并输出    \n\n五：判断循环语句1.if…Else 语句if (条件)&#123;    条件成立时执行的代码;&#125;else&#123;\t条件不成立时执行的代码;&#125;\n\n实例\n&lt;?php$t=date(&quot;H&quot;);if ($t&lt;&quot;20&quot;)&#123;    echo &quot;Have a good day!&quot;;&#125;else&#123;    echo &quot;Have a good night!&quot;;&#125;?&gt;\n\n2.Switch 语句&lt;?phpswitch (n)&#123;case label1:    如果 n=label1，此处代码将执行;    break;case label2:    如果 n=label2，此处代码将执行;    break;default:    如果 n 既不等于 label1 也不等于 label2，此处代码将执行;&#125;?&gt;\n\n实例\n&lt;?php$favcolor=&quot;red&quot;;switch ($favcolor)&#123;case &quot;red&quot;:    echo &quot;你喜欢的颜色是红色!&quot;;    break;case &quot;blue&quot;:    echo &quot;你喜欢的颜色是蓝色!&quot;;    break;case &quot;green&quot;:    echo &quot;你喜欢的颜色是绿色!&quot;;    break;default:    echo &quot;你喜欢的颜色不是 红, 蓝, 或绿色!&quot;;&#125;?&gt;\n\n3.while 循环while (条件)&#123;    要执行的代码;&#125;\n\n实例\n&lt;?php$i=1;while($i&lt;=5)&#123;    echo &quot;$i . &quot;&lt;br&gt;&quot;;\t   //输出变量$i的值    $i++;\t\t\t\t\t//$i = $i +1&#125;?&gt;\n\n4.for 循环for (初始值; 条件; 增量)&#123;    要执行的代码;&#125;\n\n冒泡排序实例\n&lt;?php$sum = array(8,12,6,20,90); \t\t//创建数组$a = count($sum);                   //数组的长度for($i = 0; $i&lt;$a-1;$i++)&#123;    for($c = 0; $c&lt;$a-$i-1; $c++)&#123;        if($sum[$c]&gt;$sum[$c+1])&#123;            $l = $sum[$c];            $sum[$c] = $sum[$c+1];            $sum[$c+1 = $l;        &#125;    &#125;&#125;print_r($sum) ;     ?&gt;                 \n\n","categories":["php代码基础"],"tags":["php代码基础"]},{"title":"交换机/路由应用","url":"http://example.com/2021/12/25/交换机路由应用/","content":"一：交换/路由基础1.交换机工作原理\n2.交换机工作模式及命令\n\n\n\n\n\n二：路由概述1.工作原理\n\n\n2.静态路由\n\n三：VLAN介绍及配置1.概述\n2.VLAN技术\n3.VLAN配置\n\n\n\n4.VlAN Trunk介绍\n\n\n\n\n四：访问控制ACL1.概念\n2.工作原理\n\n3.标准访问列表\n\n\n\n4.扩展访问列表\n五：配置ACL\n一：10网段禁止访问整个50网段\n输入为\nRouter(config)#access-list 1 deny 192.168.10.0 0.0.0.255\nRouter(config)#interface Gig0/2\nRouter(config-if)#ip access-group 1 out\n40网段可以被ping通\n\n50网段不可以被ping通\n\n二：40网段禁止访问50网段\n输入为\nRouter(config)#access-list 1 deny 192.168.40.0 0.0.0.255\nRouter(config)#interface Gig0/2\nRouter(config-if)#ip access-group 1 out\n50网段不可以被ping通\n \n10网段可以被ping通\n \n三：10网段禁止访问40网段\n输入为\nRouter(config)#access-list 1 deny 192.168.10.0 0.0.0.255\nRouter(config)#int\nRouter(config)#interface Gig0/0\nRouter(config-if)#ip access-group 1 out\n40网段不可以被ping通\n \n50网段可以被ping通\n\n","categories":["计算机网络"],"tags":["计算机网络"]},{"title":"TCP/UDP/DNS/DHCP协议分析","url":"http://example.com/2021/12/25/TCPUDPDNSDHCP协议分析/","content":"一：TCP协议分析1.概念\n2.TCP数据格段格式\n3.TCP数据段分析\n\n\n\n\n4.每个协议所占的端口\n5.TCP的连接建立（三次握手和四次挥手）1.三次握手第一次握手A的TCP向B发出连接请求报文段，其首部中的同步位 SYN=1，并选择序号seq=x， 表明传送数据时的第一个数据字节序号为x+1\n\n第一次握手报文分析\n由62525发起请求与9090建立连接。连接其首部中的同步位 SYN=1，并选择序号seq=0， 表明传送数据时的第一个数据字节序号为0+1\n\n第二次握手B 的 TCP 收到连接请求报文段后，如果同意，则发回确认 B 在确认报文段中，应使SYN=1，使ACK=1，其确认号是ack=x+1，自己选择的序号seq=y\n\n第二次握手报文分析\n由9090响应62525的请求。9090 的 TCP 收到连接请求报文段后，如果同意，则发回确认 62525 在确认报文段中，应使SYN=1，使ACK=1，其确认号是ack=0+1，自己选择的序号seq=0\n\n第三次握手. A 收到此报文段后，向B给出确认，其ACK=1，确认号 ack=y+1 A 的 TCP 通知上层应用进程，连接已经建立\n\n第三次握手报文分析\n62525 收到此报文段后，向9090给出确认，其ACK=1，确认号 ack=0+1 A 的 TCP 通知上层应用进程，连接已经建立.\n\n建立连接完成\n\n2.四次挥手第一次挥手数据传输结束后，通信的双方都可释放连接 现在，A的应用进程先向其TCP发出连接释放报文，并停止再发送数据，主动关闭TCP连接 A把连接释放报文段首部的FIN=1，其序号seq=u，等待B的确认\n\n第二次挥手1.服务器回复客户端，确认号ack=u+1； \n2.这个报文段自己的序号为seq=v，此时，TCP服务器进程通知高层应用进程； \n3.从客户端到服务器这个方向的连接就释放了； \n4.但TCP连接处于半关闭状态，FIN=0，代表服务器若要继续发送数据，客户端仍需要接收。\n\n第三次挥手\n1.若服务器已经没有要发给客户端的数据了，其应用进程就通知TCP释放连接； \n2.服务器的seq=v；ack=u+1；FIN=1； \n3.相当于服务器完成了数据传送，告知客户端我也完事了，FIN=1\n\n第三次挥手1.客户端向服务器发送确认报：ACK=1； \nFIN=0； \nseq=u+1； \nack=v+1； \n2.这代表着四次挥手全部完成，TCP连接进入关闭状态\n\n6.可靠的传输原理\n\n二:UDP协议分析1.概念\n2.报头格式\n\n三：TCP与CDP的区别\n四：DNS协议1.概念\n2.域名组成\n\n3.DNS解析\n\n4.字段含义\n五：DHCP协议1.概念\n2.字段含义\n\n3.DHCP工作原理\n\n","categories":["计算机网络"],"tags":["计算机网络"]},{"title":"ARP/IP/ICMP协议分析","url":"http://example.com/2021/12/23/ARPIPICMP协议分析/","content":"一：ARP协议分析1.概念它是是将IP地址解析为以太网MAC地址(或称物理地址)的协议 \n在局域网中，当主机或其他网络设备有数据要发送给另一个主机或设备时，必须知道对方的IP地址和MAC地址\n\n\n2.ARP缓存表\n3.ARP报文格式\n\n4.ARP请求与响应报文分析\n二：IP协议分析1.IP协议结构\n2.IP报头字段分析\n\n\n\n三：icmp协议分析1.概念\n2.ICMP报头分析\n3.类型及含义\n4.ICMP数据报头结构分析示例\n\n","categories":["计算机网络"],"tags":["计算机网络"]},{"title":"计算机网络基础","url":"http://example.com/2021/12/22/计算机网络基础/","content":"一：认识网络和网络设备1.计算机网络的组成\n2.传输介质\n3.网络设备\n\n\n\n\n\n4.常见的网络\n\n\n\n二:OSI模型和TCP/IP模型1.OSI分层思想\n\n2.每层的作用\n\n3.数据封装与接封装的过程\n\n\n4.TCP/IP协议模型\n5.OSI模型 VS TCP/IP模型\n\n6.TCP/IP协议族的组成\n7.设备与层的对应关系\n8各层间的通信\n","categories":["计算机网络"],"tags":["计算机网络"]},{"title":"windows基本使用及服务安装","url":"http://example.com/2021/12/20/windows基本使用及服务安装/","content":"一：常用DOS命令1.DOS概念\n2.ipconfig\n\n\n命令\n说明\n\n\n\nipconfig\n查看ip地址\n\n\nipconfig /release\n释放版本机现有的ip地址\n\n\nipconfig /renew\n重新向dhcp获取ip地址\n\n\nipconfig /all\n显示完整的ip地址\n\n\n3.用户及用户名\n\n\n命令\n说明\n\n\n\nnet user 账号名 密码 /add\n添加一个新用户\n\n\nnet user 账号名 /del\n删除用户\n\n\nnet user 账号名\n查看指定用户的详情信息\n\n\nnet localgroup\n产看本地用户组\n\n\n4.netstat\n\n\n命令\n说明\n\n\n\nnetstat -a\n查看本地机器开放端口\n\n\nnetstat -r\n列出当前的路由信息\n\n\nnetstat -n\n不对名字进行解析\n\n\n5.cd命令\n\n\n命令\n说明\n\n\n\ncd\\\n返回根目录\n\n\ncd ..\n返回上一层目录\n\n\ncd\n进入指定目录\n\n\n6.其他常用命令\n\n\n命令\n说明\n\n\n\ndir\n查看文件夹下的文件或目录\n\n\nmkdir(md)\n新建文件夹\n\n\nrmdir(rd)\n删除文件夹\n\n\ncopy\n复制文件或文件夹\n\n\ndel\n删除文件\n\n\nren\n改名\n\n\ntype\n查看文本文件\n\n\n7.防火墙命令netsh advfirewall firewall add rule name=icqtest dir=in action=allow protocol=tcp localport=3389     #增加本地的TCP的3389端口对外开放\n\n\n二：Windows服务安装1.安装IIS服务\n\n\n2.网站搭建\n\n\n\n","categories":["windows 2008 R2"],"tags":["windows"]},{"title":"Liunx软件安装和环境搭建","url":"http://example.com/2021/12/19/Liunx软件安装和环境搭建/","content":"一：Linux软件安装1.yum安装方法\n通过yum搜索并进行安装，或升级卸载\n\n2.RPM二进制包安装\n\n\n3.源码安装\n4.源码安装nginx下载nginx的压缩包并解压，找到并运行configure，编译文件，将文件复制到相应的位置，安装成功，运行nginx关闭防火墙\nwegt http://nginx.org/download/nginx-1.20.2.tar.gz  #下载压缩包tar -zxvf nginx-1.20.2.tar.gz     #解压./configure --prefix=/usr/local/nginx            #运行安装指定的位置make                      #编译文件make install              #将文件复制到相应的文件夹cd /usr/local/ngonx/sbin/   #文件所在位置./nginx                     #启动nginx\n\n\n\n\n二:网站环境搭建1.安装Apache环境使用yum下载\nyum -y install httpd httpd-devel httpd-manual mod_ssl   #下载安装Apachesystemctl start httpd           #启动apache服务systemctl enable httpd          #设置为开机自启动\n\n2.安装Mysql环境yum下载\nyum -y install mariadb-server mariadb   #安装Mysql和扩展包systemctl start mariadb     #安装完成后启动mysqlmysql -u root -p            #登陆mysql数据库systemctl enable mariadb    #设置为开机自启动\n\n3.安装PHP环境yum -y install php php-mysql php-common php-gd php-mbstring php-mcryptphp-devel php-xml   #安装php和扩展包systemctl restart httpd   #安装完成后重启httpd服务\n\n安装完成后在/var/www/html下新建一个1.php文件\n&lt;? phpphpinfo();?&gt;\n\nf浏览器访问虚拟机IP地址出现下图就说明配置成功\n\nLamp环境搭建完成。\n","categories":["CentoS 7基础"],"tags":["Linux"]},{"title":"Liunx用户和权限","url":"http://example.com/2021/12/19/Liunx用户和权限/","content":"一：Liunx用户与用户组1概念\n\n\n\n\n\n\n2.创建用户\n\n\n命令\n说明\n\n\n\nuseradd 用户名\n创建用户，同时创建与用户名同名的组\n\n\nuseradd –g 组名 用户名\n创建用户并指定用户组\n\n\nuseradd 用户名 –s xxx\n创建用户并指定用户登录后所使用的shell，如果值为 /sbin/nologin 或 者 /bin/false时，表示禁止该用户登录\n\n\nusermod –g 用户组 用户名\n修改用户所在用户组\n\n\nusermod –l 新用户名 用户名\n修改用户名\n\n\nuserdel 用户名\n删除用户，不删除用户的家目录（-r 参数同时删除家目录）\n\n\n3.创建用户组\n\n\n命令\n说明\n\n\n\ngroupadd\n创建用户组\n\n\ngroupdel\n删除指定用户组\n\n\n4.用户管理\n\n\n命令\n说明\n\n\n\nsu 用户名\n切换用户身份，如果不带参数，则切换为root身份\n\n\nid 用户名\n显示指定用户信息，包括用户编号、用户名，组编号、组名\n\n\nwhoami\n显示当前登录用户名\n\n\n二：Liunx权限控制1.概念\n\n\n2.文件夹/文件权限\n\n\n命令\n说明\n\n\n\nchmod u+x test.txt\n为文件的所有者附加执行权限\n\n\nchmod u=rwx test.txt\n为所有者赋予所有权限\n\n\nchmod a=rwx test.txt\n为所有人（所有者、所属组、其他人）赋予所有权限\n\n\nchmod 755 test.txt\n为文件赋予执行权限：rwxr-xr-x\n\n\n\n常用组合：777最高权限，644普通文件权限，755执行权限\n\n\n3.文件夹/文件所有者\n\n\n命令\n说明\n\n\n\nchown icq test\n将test文件的所有者修改为icq\n\n\nchown icq:icqtest test\n修改test文件的所有者和所有组修改为：icq、icqtest\n\n\n\n4.文件夹/文件所属组\n\n\n命令\n说明\n\n\n\nchgrp icqtest test.txt\n将 test.txt 文件的所属组由 root 更改为 icqtest\n\n\n\n5.显示、设置文件的默认权限\n\n\n命令\n说明\n\n\n\numask 022\n改变基础权限\n\n\n\n","categories":["CentoS 7基础"],"tags":["Linux"]},{"title":"day1liunx基础","url":"http://example.com/2021/12/19/day1liunx基础/","content":"一：liunx常用命令1.关机命令\n\n\n命令\n说明\n\n\n\npoweroff\n立刻关机\n\n\nhalt\n立刻关机（需要root权限）\n\n\nshutdown -h now\n立刻关机\n\n\ninit 0\n关机\n\n\n2.重启命令\n\n\n命令\n说明\n\n\n\ninit 6\n重新启动\n\n\nreboot\n立刻重启\n\n\nshutdown -r now\n立刻重启\n\n\n3.查看文件夹下的文件\n\n\n命令\n说明\n\n\n\nls\n查看文件夹下的文件\n\n\nls -l\n查看文件夹下的文件的详细信息\n\n\nls -lR\n递归查看文件夹下的文件的详细信息\n\n\nls -a\n查看隐藏文件\n\n\n4.创建文件夹及删除文件夹\n\n\n命令\n说明\n\n\n\nmkdir\n新建文件夹\n\n\nmkdir -p\n递归创建文件夹\n\n\nmkdir .\n创建隐藏文件夹\n\n\nrm\n删除文件或文件夹\n\n\nrm -rf\n递归删除文件或文件夹\n\n\n5.新建文件\n\n\n命令\n说明\n\n\n\ntouch\n新建文件夹\n\n\ntouch -t\n修改文件的时间\n\n\nvim\n新建并编辑文件\n\n\n6.复制\n\n\n命令\n说明\n\n\n\ncp 源文件 目标文件\n复制文件\n\n\ncp -r\n递归复制\n\n\n7.剪切移动重命名\n\n\n命令\n说明\n\n\n\nmv 源文件 目标文件\n移动文件（重命名）\n\n\n8.查看\n\n\n命令\n说明\n\n\n\ncat/grep/tail/head\n查看\n\n\nmore\n分页查看\n\n\n9.辅助命令\n\n\n命令\n说明\n\n\n\nTcb\n自动补齐\n\n\nCtrl+L\n清屏\n\n\nCtrl+K\n清空至行首\n\n\nCtrl+U\n清空至行尾\n\n\nCtrl+C\n中断执行命令\n\n\n10.打包与解包\n\n\n命令\n说明\n\n\n\ntar -cvf\n打包\n\n\ntar -xvf\n解包\n\n\n11.压缩命令\n\n\n命令\n说明\n\n\n\ntar -zcvf\n打包（gz)\n\n\ntar -zxvf\n解包（gz）\n\n\nzip\n打包（zip)\n\n\nunzip\n解包(zip)\n\n\n12.防火墙命令\n\n\n命令\n说明\n\n\n\nfirewall-cmd –reload\n防火墙重新加载配置\n\n\nfirewall-cmd –state\n查看防火墙状态\n\n\nfirewall-cmd –zone=public –list-ports\n查看防火墙开放那些端口\n\n\nfirewall-cmd –zone=public –list-service\n查看接受那些连接附服务\n\n\nfirewall-cmd –zone=public –add-port=80/tcp –permanent\n添加80端口为永久开放\n\n\nfirewall-cmd –zone=public –add-service=http –permanent\n永久添加http连接服务\n\n\nsystemctl stop firewalld\n关闭防火墙\n\n\nsystemctl start firewalld\n开启防火墙\n\n\n14.网络类命令\n\n\n命令\n说明\n\n\n\nip a\n查看ip地址\n\n\nip route\n查看路由信息\n\n\nss -antlp\n查看开放那些端口\n\n\nnslookup\n域名解析为ip\n\n\ntraceroute\n路由跟踪\n\n\nnetstat -antlp\n查看运行的端口\n\n\n15.服务类命令\n\n\n命令\n说明\n\n\n\nps -aux\n查看进程\n\n\nps -A | grep\n查看指定进程\n\n\ntop\n查看cpu\n\n\nkill -9\n结束进程\n\n\nw\n查看登录信息\n\n\nwho\n查看登录信息\n\n\n16特殊操作\n\n\n命令\n说明\n\n\n\nscreen -S name1\n创建新窗口\n\n\nscreen -ls\n列出所有后台的会话\n\n\nchattr +i\n文件添加保护\n\n\nvim编辑器的使用1.vim工作模式\n2.命令模式\n\n\n命令\n说明\n\n\n\ni\n光标所在处左侧输入\n\n\nI\n光标跳转行开头\n\n\no\n光标所在的下一行处输入新的一行\n\n\nO\n光标所在的上一行处输入新的一行\n\n\na\n光标所在处右侧输入\n\n\nA\n光标跳转行尾\n\n\nwq\n保存并退出\n\n\nq\n退出不保存\n\n\n/$\n搜索\n\n\n：n,ns/n/n/g(n为参数）\n替换第几行里的字符\n\n\n3.输入模式\n\n\n命令\n说明\n\n\n\no\n移动到这一行的最前面字符处\n\n\n$\n移动到这一行的最后面字符处\n\n\nn\n重复前一个搜寻的动作\n\n\nN\n重复前一个搜寻的动作\n\n\nx\n为向后剪切一个字符\n\n\ndd\n剪切游标所在的那一整行\n\n\nndd\n多行剪切\n\n\nu\n一直撤销\n\n\np\n粘贴\n\n\nliunx文件系统目录结构\n\n\n\n\n","categories":["CentoS 7基础"],"tags":["Linux"]},{"title":"搭建hexo博客","url":"http://example.com/2021/12/17/hexo博客搭建/","content":"一：简介​            Nginx是一款轻量级的Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，在BSD-like 协议下发行。其特点是占有内存少，并发能力强，事实上nginx的并发能力在同类型的网页服务器中表现较好，中国大陆使用nginx网站用户有：百度、京东、新浪、网易、腾讯、淘宝等。 \n二：环境准备虚拟机CentoS 7     nginx+git\n三：安装1.虚拟机安装nginx下载nginx的压缩包并解压，找到并运行configure，编译文件，将文件复制到相应的位置，安装成功，运行nginx关闭防火墙\nwegt http://nginx.org/download/nginx-1.20.2.tar.gz  #下载压缩包tar -zxvf nginx-1.20.2.tar.gz     #解压./configure --prefix=/usr/local/nginx            #运行安装指定的位置make                      #编译文件make install              #将文件复制到相应的文件夹cd /usr/local/ngonx/sbin/   #文件所在位置./nginx                     #启动nginxsystemctl stop firewalld   #关闭防火墙\n\n浏览器中搜索虚拟机IP地址出现以下图片代表成功访问\n\n2.windows下载安装windows终端安装choco\n@powershell -NoProfile -ExecutionPolicy unrestricted -Command &quot;iex ((new-object net.webclient).DownloadString(&#x27;https://chocolatey.org/install.ps1&#x27;))&quot; &amp;&amp; SET PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin   \n\n通过choco安装git和nodejs\nchoco install git    #下载安装gitchoco install nodejs  #下载安装nodejs\n\n安装Hexo\nnpm install -g hexo-cli\n\n新建blog目录\nhexo init blog               #将源文件初始化如blog文件夹中\n\nblog文件夹下会出现下目录结构\n\n 然后我们进入blog这个文件夹中 右键打开终端\nhexo s —debug          #启动项目\n\n三：配置主题https://hexo.io/themes/     挑选主题的地址\nhttps://github.com/theme-kaze/hexo-theme-Kaze     我的主题的下载地址（有喜欢的可以下载）\n下载主题\n\n解压后将文件夹改名为kaze并将文件夹复制到blog/themes/文件夹下\n打开blog文件夹下的_config.yml文件用记事本等编辑工具打开\n将language：后面修改为  ch-CN (中文简体) 改变博客的语言\n\n将theme:后面修改为kaze\n\n保存并关闭\n打开blog\\themes\\kaze文件夹下的_config.yml文件用记事本等编辑工具打开\n修改博客的名称，作者名称，头像，logo  (在blog\\themes\\kaze\\source下新建img文件夹放入头像和logo或上传阿里oss方式添加链接)\n如图\n\n在biog文件夹下右键打开终端\nhexo clean      #清理缓存hexo g         #整合文件hexo s          #输出http://localhost:4000           #访问链接就能看到搭建好的博客页面了\n\n四：部署到虚拟机中通过finashell（或xshll）连接自己的虚拟机\n将 blog\\public 下的文件夹上传到虚拟机中 /usr/local/ngonx/html 文件夹下如下图\n\n浏览器访问虚拟机ip就可以看到搭建好的博客了\n","categories":["CentoS 7基础"],"tags":["Linux"]}]